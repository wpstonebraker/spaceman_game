{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/explosion.js","webpack:///./src/cards/card.js","webpack:///./src/cards/dud.js","webpack:///./src/util/animation.js","webpack:///./src/player/shields.js","webpack:///./src/enemy/enemyProjectile.js","webpack:///./src/enemy/enemyShields.js","webpack:///./src/enemy/enemy.js","webpack:///./src/cards/installUpdate.js","webpack:///./src/player/projectile.js","webpack:///./src/cards/laserAtk.js","webpack:///./src/cards/missleAtk.js","webpack:///./src/cards/overcharge.js","webpack:///./src/player/newShields.js","webpack:///./src/cards/recharge.js","webpack:///./src/cards/syphonEnergy.js","webpack:///./src/cards/salvo.js","webpack:///./src/cards/tuneUp.js","webpack:///./src/hand.js","webpack:///./src/player/energy.js","webpack:///./src/player/fire.js","webpack:///./src/player/player.js","webpack:///./src/player/player_status.js","webpack:///./src/player/Input.js","webpack:///./src/cards/startGame.js","webpack:///./src/buttons/button.js","webpack:///./src/enemy/smallEnemy.js","webpack:///./src/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Explosion","x","y","game","this","image","document","getElementById","position","width","height","loop","loopIndex","frames","fX","fY","ctx","drawImage","drawFrame","idx","elements","indexOf","splice","dt","Card","energy","player","cost","innerText","playerPosY","font","fillStyle","textAlign","fillText","description","cardImg","startingChoices","card","startingCards","push","laser","laserRight","laserY","topLeft","bottomLeft","cardIdx","findCardIdx","findCard","removeAndAddCard","laserIdx","projectiles","length","gameState","forEach","projectile","collision","Dud","pop","hand","deck","Animation","loops","fps","Shields","EnemyProjectile","sprite","speed","atkType","velocity","shields","receiveDamage","EnemyShields","size","target","Enemy","laserSprite","missleSprite","dudSprite","shieldCharge","armor","lasers","missles","receiveAttackTop","receiveAttackBottom","receiveAttackX","special","destroyed","nextAction","renderStats","renderTarget","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","fillRect","setTimeout","endScreen","attackLasers","attackMissles","heal","rechargeShields","dudCards","Math","random","classList","remove","enemy","angle","atan2","cos","sin","dmg","type","sign","InstallUpdate","maxEnergy","Projectile","self","enemies","renderShields","renderExplosion","gameWidth","LaserAttack","lastTime","laserPos","MissleAttack","misslePos","Overcharge","power","NewShields","Recharge","SyphonEnergy","syphonEnergy","Salvo","TuneUp","Hand","STARTING_CARDS","slice","cardPile","playerCards","currentHand","discardPile","disabled","initializeDeck","startTurn","playCard","extra","rando","playerTurn","initializeEnergy","resetDeck","shift","render","check","action","add","Array","from","getElementsByClassName","discardHand","computerTurn","innerHTML","createElement","src","id","appendChild","addEventListener","Energy","Fire","Player","poweredUp","gameHeight","receiveAttack","speedX","speedY","maxSpeedX","maxSpeedY","disableLaser","PlayerStatus","ball","draw","renderEnergy","InputHandler","e","moveUp","moveDown","moveLeft","moveRight","preventDefault","fire","stopY","stopX","StartGame","manageIntro","Button","btns","btn","hideAll","selectCards","window","open","SmallEnemy","targetImage","Game","background","hasStarted","gameover","isOver","topDash","bottomDash","topScreen","energyScreen","initializeStartScreenButtons","story","instructions","illustration","startGame","credits","initializeStartingCards","checkPos","start","playerStatus","introBossBattle","startBossBattle","update","element","linkedIn","angelList","github","drawSelectScreenWords","drawSelectInstructions","drawStartingCards","writeIntroText1","writeIntroText2","postBattle","pregame","getContext","endTurn","requestAnimationFrame","gameLoop","timestamp"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export default class Explosion {\n  constructor(x, y, game) {\n    this.image = document.getElementById(\"img_explosion\");\n    this.position = {\n      x,\n      y,\n    };\n    this.width = 96;\n    this.height = 96;\n    this.loop = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n    this.loopIndex = 0;\n    this.frames = 0;\n    this.game = game;\n  }\n\n  drawFrame(fX, fY, ctx) {\n    ctx.drawImage(\n      this.image,\n      fX * this.width,\n      fY * this.height,\n      this.width,\n      this.height,\n      this.position.x - 50,\n      this.position.y - 50,\n      100,\n      100\n    );\n  }\n\n  draw(ctx) {\n    if (this.frames > 1) {\n      this.loopIndex++;\n      this.frames = 0;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    } else {\n      this.drawFrame(this.loopIndex, 0, ctx);\n      this.frames++;\n    }\n\n    if (this.loopIndex > 11) {\n      const idx = this.game.elements.indexOf(this);\n      this.game.elements.splice(idx, 1);\n    }\n\n    // this.drawFrame(3, 0, this.position.x, this.position.y, ctx);\n    // this.drawFrame(4, 0, this.position.x, this.position.y, ctx);\n  }\n\n  update(dt) {}\n}\n","import Explosion from \"../util/explosion\";\n\nexport default class Card {\n  constructor(game, position) {\n    this.height = 200;\n    this.width = 100;\n    this.game = game;\n    this.energy;\n  }\n\n  check() {\n    if (this.game.player.energy - this.cost < 0) {\n      document.getElementById(\"card-description-span\").innerText =\n        \"Not enough energy\";\n      return false;\n    }\n\n    return true;\n  }\n\n  checkPos(ctx) {\n    let playerPosY = this.game.player.position.y + 100;\n    if (playerPosY >= this.y && playerPosY <= this.y + 60) {\n      ctx.font = \"25px VT323\";\n      ctx.fillStyle = \"white\";\n      ctx.textAlign = \"right\";\n      ctx.fillText(this.description, 1150, this.y + 35);\n    }\n  }\n\n  draw(ctx, x, y, width, height) {\n    ctx.drawImage(this.cardImg, x, y, width, height);\n  }\n\n  findCardIdx() {\n    return this.game.startingChoices.indexOf(this);\n  }\n\n  findCard(idx) {\n    return this.game.startingChoices[idx];\n  }\n\n  removeAndAddCard(idx, card) {\n    this.game.startingChoices.splice(idx, 1);\n    this.game.startingCards.push(card);\n  }\n\n  collision(laser, card) {\n    let laserRight = laser.position.x + laser.width;\n    let laserY = laser.position.y;\n    let topLeft = card.y;\n    let bottomLeft = card.y + 60;\n    let cardX = 1200;\n\n    if (laserRight >= cardX && laserY >= topLeft && laserY <= bottomLeft) {\n      const cardIdx = this.findCardIdx();\n      const card = this.findCard(cardIdx);\n      this.removeAndAddCard(cardIdx, card);\n      const laserIdx = this.game.projectiles.indexOf(laser);\n      this.game.projectiles.splice(laserIdx, 1);\n      this.game.elements.push(\n        new Explosion(laser.position.x, laser.position.y, this.game)\n      );\n    }\n  }\n\n  update(dt) {\n    if (this.game.projectiles.length >= 1 && this.game.gameState === 1) {\n      this.game.projectiles.forEach((projectile) => {\n        this.collision(projectile, this);\n      });\n    }\n  }\n}\n","import Card from \"./card\";\n\nexport default class Dud extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 1;\n    this.image = \"assets/dud.png\";\n    this.description =\n      \"Malware. Not fatal, but annoying. Playing this card removes it from your deck\";\n  }\n\n  action() {\n    this.game.player.energy.pop();\n    const idx = this.game.hand.deck.indexOf(this);\n    this.game.hand.deck.splice(idx, idx + 1);\n  }\n}\n","export default class Animation {\n  constructor(image, x, y, width, height, loops, fps, game) {\n    this.image = image;\n    this.position = {\n      x,\n      y,\n    };\n    this.width = width;\n    this.height = height;\n    this.loopIndex = 0;\n    this.frames = 0;\n    this.game = game;\n    this.loops = loops;\n    this.fps = fps;\n  }\n\n  drawFrame(fX, fY, ctx) {\n    ctx.drawImage(\n      this.image,\n      fX * this.width,\n      fY * this.height,\n      this.width,\n      this.height,\n      this.game.player.position.x + this.position.x,\n      this.game.player.position.y + this.position.y,\n      100,\n      100\n    );\n  }\n\n  draw(ctx) {\n    if (this.frames > this.fps) {\n      this.loopIndex++;\n      this.frames = 0;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    } else {\n      this.drawFrame(this.loopIndex, 0, ctx);\n      this.frames++;\n    }\n\n    // if (this.loopIndex > this.loops) {\n    //   this.game.elements.pop();\n    // }\n\n    // this.drawFrame(3, 0, this.position.x, this.position.y, ctx);\n    // this.drawFrame(4, 0, this.position.x, this.position.y, ctx);\n  }\n\n  update(dt) {}\n}\n","export default class Shields {\n  constructor(x, y, game) {\n    this.image = document.getElementById(\"img_shields\");\n    this.position = {\n      x,\n      y,\n    };\n    this.width = 256;\n    this.height = 256;\n    this.loopIndex = 0;\n    this.frames = 0;\n    this.game = game;\n  }\n\n  // give it the image\n  // fX (nth frame x cord starts here (top left))\n  // fX (nth frame y cord starts here (top left))\n  drawFrame(fX, fY, ctx) {\n    ctx.drawImage(\n      this.image,\n      fX * this.width,\n      fY * this.height,\n      this.width,\n      this.height,\n      this.game.player.position.x - 5,\n      this.game.player.position.y + 10,\n      150,\n      150\n    );\n  }\n\n  draw(ctx) {\n    if (this.frames > 1) {\n      this.loopIndex += 1;\n      this.frames = 0;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    } else {\n      this.drawFrame(this.loopIndex, 0, ctx);\n      this.frames += 1;\n    }\n\n    if (this.loopIndex > 11) {\n      this.game.elements.pop();\n    }\n\n    // this.drawFrame(3, 0, this.position.x, this.position.y, ctx);\n    // this.drawFrame(4, 0, this.position.x, this.position.y, ctx);\n  }\n\n  update(dt) {}\n}\n","import Shields from \"../player/shields\";\nimport Explosion from \"../util/explosion\";\n\nexport default class EnemyProjectile {\n  constructor(x, y, sprite, width, height, speed, game, atkType, velocity) {\n    this.position = {\n      x: x,\n      y: y,\n    };\n    this.speed = speed;\n    this.sprite = sprite;\n    this.width = width;\n    this.height = height;\n    this.game = game;\n    this.atkType = atkType;\n    this.velocity = velocity;\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      this.sprite,\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n\n    if (\n      this.game.player.shields > 0 &&\n      this.position.x < this.game.player.position.x + 100\n    ) {\n      this.game.projectiles.pop();\n      this.game.elements.push(\n        new Shields(this.position.x, this.position.y, this.game)\n      );\n      this.game.player.receiveDamage(this.atkType);\n    } else if (this.position.x < this.game.player.position.x + 100) {\n      this.game.projectiles.pop();\n      this.game.elements.push(\n        new Explosion(this.position.x, this.position.y, this.game)\n      );\n      this.game.player.receiveDamage(this.atkType);\n    }\n  }\n\n  update(dt) {\n    this.position.x -= this.velocity.x * 30;\n    this.position.y -= this.velocity.y * 30;\n  }\n}\n","export default class EnemyShields {\n  constructor(x, y, size, game) {\n    this.image = document.getElementById(\"img_npc1shields\");\n    this.position = {\n      x: x,\n      y: y,\n    };\n    this.width = 256;\n    this.height = 256;\n    this.loop = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n    this.loopIndex = 0;\n    this.frames = 0;\n    this.game = game;\n    this.size = size;\n  }\n\n  // give it the image\n  // fX (nth frame x cord starts here (top left))\n  // fX (nth frame y cord starts here (top left))\n  drawFrame(fX, fY, ctx) {\n    ctx.drawImage(\n      this.image,\n      fX * this.width,\n      fY * this.height,\n      this.width,\n      this.height,\n      this.game.target.position.x,\n      this.game.target.position.y,\n      this.size,\n      this.size\n    );\n  }\n\n  draw(ctx) {\n    if (this.frames > 1) {\n      this.loopIndex += 1;\n      this.frames = 0;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    } else {\n      this.frames++;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    }\n\n    if (this.loopIndex > 11) {\n      this.game.elements.pop();\n    }\n\n    // this.drawFrame(3, 0, this.position.x, this.position.y, ctx);\n    // this.drawFrame(4, 0, this.position.x, this.position.y, ctx);\n  }\n\n  update(dt) {}\n}\n","import Dud from \"../cards/dud\";\nimport Animation from \"../util/animation\";\nimport Explosion from \"../util/explosion\";\nimport EnemyProjectile from \"./enemyProjectile\";\nimport EnemyShields from \"./enemyShields\";\n\nexport default class Enemy {\n  constructor(game, x, y) {\n    this.image = document.getElementById(\"img_npc1\");\n    this.position = {\n      x: x,\n      y: y,\n    };\n\n    this.laserSprite = document.getElementById(\"img_npc1a1\");\n    this.missleSprite = document.getElementById(\"img_npc1a2\");\n    this.dudSprite = document.getElementById(\"img_malwareAni\");\n\n    this.speed = 0.2;\n\n    this.game = game;\n\n    this.width = 256;\n    this.height = 256;\n    this.shields = 50;\n    this.shieldCharge = 2;\n    this.armor = 100;\n    this.lasers = 20;\n    this.missles = 20;\n    this.receiveAttackTop = this.position.y;\n    this.receiveAttackBottom = this.position.y + this.height;\n    this.receiveAttackX = 1150;\n    this.special = 1;\n    this.destroyed = false;\n    this.name = \"Big Boss\";\n    this.nextAction = \"Laser Attack\";\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      this.image,\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n    debugger;\n    let playerPosY = this.game.player.position.y + 100;\n    if (\n      playerPosY >= this.position.y &&\n      playerPosY <= this.position.y + this.height\n    ) {\n      this.renderStats(ctx);\n      this.renderTarget(ctx);\n    }\n  }\n\n  renderTarget(ctx) {\n    ctx.fillStyle = \"hsla(0, 100%, 50%, 1)\";\n    ctx.textAlign = \"center\";\n    ctx.fillText(this.name, 1250, 30);\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Next Turn:\", 1250, 60);\n\n    ctx.fillText(this.nextAction, 1250, 90);\n  }\n\n  renderStats(ctx) {\n    ctx.beginPath();\n    ctx.moveTo(this.position.x + 180, this.position.y + 190);\n    ctx.lineTo(1400, 400);\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = \"hsla(0, 100%, 50%, 0.25)\";\n    ctx.stroke();\n    ctx.fillStyle = \"hsla(0, 100%, 50%, 0.25)\";\n    ctx.fillRect(1400, 400, 130, 100);\n    ctx.fillStyle = \"white\";\n    ctx.fillText(`Shields: ${this.shields}`, 1405, 420);\n    ctx.fillText(`Armor: ${this.armor}`, 1405, 440);\n    ctx.fillText(`Lasers: ${this.lasers}`, 1405, 460);\n    ctx.fillText(`Missles: ${this.missles}`, 1405, 480);\n    // ctx.fillStyle = \"white\";\n    // ctx.fillText(this.name, 970, 20);\n    // ctx.fillText(\n    //   `Shields: ${this.shields}     Lasers: ${this.lasers}`,\n    //   1120,\n    //   55\n    // );\n    // ctx.fillText(`Armor: ${this.armor}      Missle: ${this.missles}`, 1120, 80);\n  }\n\n  update(dt) {\n    if (this.destroyed) {\n      this.position.y -= 5;\n      setTimeout(() => {\n        this.game.endScreen();\n      }, 2500);\n    }\n    if (this.position.x > 1100) this.position.x -= 1;\n    if (this.position.y < 120) {\n      this.position.y += this.speed;\n    } else {\n      this.speed = -this.speed;\n      this.position.y += this.speed;\n    }\n    if (this.position.y > 80) {\n      this.position.y += this.speed;\n    } else {\n      this.speed = -this.speed;\n      this.position.y += this.speed;\n    }\n    // if (this.position.y > 100 && this.position.y < 130) {\n    //   this.position.y -= this.speed;\n    // } else {\n    //   this.position.y -= this.speed;\n    // }\n  }\n\n  action() {\n    switch (this.nextAction) {\n      case \"Laser Attack\":\n        this.attackLasers();\n        break;\n      case \"Missle Attack\":\n        this.attackMissles();\n        break;\n      case \"Recharge Shield\":\n        this.heal();\n        break;\n      case \"Replenish Shield Charges\":\n        this.rechargeShields();\n        break;\n      case \"Upload Malware\":\n        this.dudCards();\n        break;\n      default:\n        break;\n    }\n    const rand = Math.random();\n\n    // if (rand < 1) {\n    if (rand < 0.33) {\n      this.nextAction = \"Upload Malware\";\n      // setTimeout(() => {\n      //   this.game.hand.startTurn();\n      // }, 2500);\n      return;\n    }\n\n    if (this.shields === 0 && this.shieldCharge > 0) {\n      this.nextAction = \"Recharge Shield\";\n    } else if (this.shieldCharge === 0) {\n      this.nextAction = \"Replenish Shield Charges\";\n    } else if (this.game.player.shields > 0) {\n      this.nextAction = \"Laser Attack\";\n    } else {\n      this.nextAction = \"Missle Attack\";\n    }\n\n    // setTimeout(() => {\n    //   this.game.hand.startTurn();\n    // }, 2500);\n  }\n\n  dudCards() {\n    this.game.hand.deck.push(new Dud(this.game));\n    this.game.hand.deck.push(new Dud(this.game));\n    this.game.hand.deck.push(new Dud(this.game));\n    this.game.elements.push(\n      new Animation(this.dudSprite, 50, 0, 64, 64, 12, 6, this.game)\n    );\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n\n    document.getElementById(\"card-description-span\").innerText =\n      \"3 Malware cards uploaded to player's deck.\";\n  }\n\n  rechargeShields() {\n    this.shieldCharge = 2;\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n\n    document.getElementById(\"card-description-span\").innerText =\n      \"Recharging shield core...\";\n  }\n\n  heal() {\n    this.shieldCharge--;\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n\n    document.getElementById(\"card-description-span\").innerText =\n      \"Enemy boosts shields by 20\";\n    this.shields += 20;\n    this.game.target = this;\n    this.game.elements.push(\n      new EnemyShields(\n        this.game.enemy.position.x - 50,\n        this.game.enemy.position.y - 50,\n        256,\n        this.game\n      )\n    );\n    // this.game.enemyStatus.render();\n  }\n\n  attackLasers() {\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n\n    document.getElementById(\n      \"card-description-span\"\n    ).innerText = `Enemy attacks for ${this.lasers} laser damage`;\n    // setTimeout(() => {\n    //   document.getElementById(\"enemy-display-span\").innerText = \"\";\n    // }, 3000);\n    const angle = Math.atan2(\n      this.position.y + 80 - (this.game.player.position.y + 100),\n      this.position.x - (this.game.player.position.x + 50)\n    );\n    const velocity = {\n      x: Math.cos(angle),\n      y: Math.sin(angle),\n    };\n    this.game.projectiles.push(\n      new EnemyProjectile(\n        this.position.x,\n        this.position.y + 80,\n        this.laserSprite,\n        32,\n        16,\n        -15,\n        this.game,\n        \"laser\",\n        velocity\n      )\n    );\n  }\n\n  attackMissles() {\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n\n    document.getElementById(\n      \"card-description-span\"\n    ).innerText = `Enemy attacks for ${this.missles} projectile damage`;\n    const angle = Math.atan2(\n      this.position.y + 80 - (this.game.player.position.y + 100),\n      this.position.x - (this.game.player.position.x + 50)\n    );\n    const velocity = {\n      x: Math.cos(angle),\n      y: Math.sin(angle),\n    };\n    this.game.projectiles.push(\n      new EnemyProjectile(\n        this.position.x,\n        this.position.y + 80,\n        this.missleSprite,\n        50,\n        50,\n        -10,\n        this.game,\n        \"missle\",\n        velocity\n      )\n    );\n  }\n\n  special() {}\n\n  receiveDamage(atkType) {\n    let dmg;\n    let type;\n    debugger;\n    switch (atkType) {\n      case \"laser\":\n        if (this.shields >= this.game.player.lasers) {\n          dmg = this.game.player.lasers;\n          type = \"shields\";\n          this.shields -= dmg;\n        } else if (this.shields === 0) {\n          debugger;\n          dmg = this.game.player.lasers / 2;\n          this.armor -= dmg;\n          type = \"armor\";\n        } else if (this.shields - this.game.player.lasers < 0) {\n          dmg = -(this.shields - this.game.player.lasers) / 2;\n          this.armor -= dmg;\n          this.shields = 0;\n          type = \"armor\";\n        }\n        break;\n      case \"overcharge\":\n        if (this.shields >= this.game.player.lasers + 20) {\n          dmg = this.game.player.lasers + 20;\n          this.shields -= dmg;\n          type = \"shields\";\n        } else if (this.shields === 0) {\n          dmg = (this.game.player.lasers + 20) / 2;\n          this.armor -= dmg;\n          type = \"armor\";\n        } else if (this.shields - (this.game.player.lasers + 20) < 0) {\n          dmg = -(this.shields - (this.game.player.lasers + 20)) / 2;\n          this.armor -= dmg;\n          this.shields = 0;\n          type = \"armor\";\n        }\n        break;\n      case \"missle\":\n        if (this.shields > this.game.player.missles / 2) {\n          dmg = this.game.player.missles / 2;\n          this.shields -= dmg;\n          type = \"shields\";\n        } else if (this.shields === 0) {\n          dmg = this.game.player.missles;\n          this.armor -= dmg;\n          Math.sign(this.armor) === -1 ? (this.armor = 0) : this.armor;\n          type = \"armor\";\n        } else if (\n          this.shields !== 0 &&\n          this.shields <= this.game.player.missles\n        ) {\n          dmg = this.shields;\n          this.shields = 0;\n          type = \"armor\";\n        }\n\n      default:\n        break;\n    }\n\n    if (this.armor <= 0) this.destroyed = true;\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n    document.getElementById(\n      \"card-description-span\"\n    ).innerText = `Enemy's ${type} receives ${dmg} damage!`;\n\n    // this.game.enemyStatus.render();\n  }\n\n  renderShields() {\n    debugger;\n    this.game.elements.push(\n      new EnemyShields(this.position.x, this.position.y, 256, this.game)\n    );\n  }\n\n  renderExplosion(x, y) {\n    this.game.elements.push(new Explosion(x, y, this.game));\n  }\n}\n","import Animation from \"../util/animation\";\nimport Card from \"./card\";\n\nexport default class InstallUpdate extends Card {\n  constructor(game) {\n    super(game);\n    this.game;\n    this.cost = 3;\n    this.image = \"assets/installUpdateCard.png\";\n    this.cardImg = document.getElementById(\"img_updateCard\");\n    this.sprite = document.getElementById(\"img_updateAni\");\n    this.description =\n      \"Install the latest AI update, max energy + 1. Requires restart to take effect.\";\n    this.y = 160;\n    this.width = 40;\n    this.height = 60;\n  }\n\n  action() {\n    this.game.player.maxEnergy++;\n    this.game.player.energy.pop();\n    this.game.player.energy.pop();\n    this.game.player.energy.pop();\n    this.game.elements.push(\n      new Animation(this.sprite, 50, 0, 64, 64, 12, 20, this.game)\n    );\n    const idx = this.game.hand.deck.indexOf(this);\n    this.game.hand.deck.splice(idx, idx + 1);\n    // setTimeout(() => {\n    //   this.game.hand.endTurn();\n    // }, 1500);\n  }\n}\n","import EnemyShields from \"../enemy/enemyShields\";\nimport Explosion from \"../util/explosion\";\n\nexport default class Projectile {\n  constructor(x, y, sprite, width, height, speed, game, atkType) {\n    this.position = {\n      x: x + game.player.position.x,\n      y: y + game.player.position.y,\n    };\n    this.speed = speed;\n    this.sprite = sprite;\n    this.width = width;\n    this.height = height;\n    this.game = game;\n    this.atkType = atkType;\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      this.sprite,\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n\n    const self = this;\n\n    this.game.enemies.forEach((enemy) => {\n      if (\n        enemy.shields > 0 &&\n        self.position.x > enemy.receiveAttackX &&\n        self.position.y >= enemy.receiveAttackTop &&\n        self.position.y <= enemy.receiveAttackBottom\n      ) {\n        self.game.target = enemy;\n        // self.game.enemyStatus.render();\n        const idx = self.game.projectiles.indexOf(self);\n        self.game.projectiles.splice(idx, 1);\n        enemy.renderShields();\n        self.game.target.receiveDamage(self.atkType);\n      } else if (\n        self.position.x > enemy.receiveAttackX &&\n        self.position.y >= enemy.receiveAttackTop &&\n        self.position.y <= enemy.receiveAttackBottom\n      ) {\n        self.game.target = enemy;\n        // self.game.enemyStatus.render();\n        const idx = self.game.projectiles.indexOf(self);\n        self.game.projectiles.splice(idx, 1);\n        enemy.renderExplosion(self.position.x, self.position.y);\n        self.game.target.receiveDamage(self.atkType);\n      } else if (self.position.x > self.game.gameWidth) {\n        const idx = self.game.projectiles.indexOf(self);\n        self.game.projectiles.splice(idx, 1);\n      }\n      // } else if (this.position.x > this.game.enemy.receiveAttack) {\n      //   this.game.enemyStatus.render();\n      //   this.game.projectiles.shift();\n      //   this.game.elements.push(\n      //     new Explosion(this.position.x, this.position.y, this.game)\n      //   );\n      // this.game.enemy.receiveDamage(this.atkType);\n      // }\n    });\n  }\n\n  update(dt) {\n    this.position.x += this.speed;\n  }\n}\n","import Card from \"./card\";\nimport Projectile from \"../player/projectile\";\n\nexport default class LaserAttack extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 1;\n    this.image = \"assets/laserAtk.png\";\n    this.description = `Fire your lasers. Lasers do full damage vs Shields and half damage vs Armor`;\n\n    this.speed = 5;\n    this.lastTime = 0;\n    this.position = {\n      x: this.game.player.laserPos.x,\n      y: this.game.player.laserPos.y,\n    };\n    this.sprite = document.getElementById(\"img_laser\");\n    this.game = game;\n    this.atkType = \"laser\";\n  }\n\n  action() {\n    // document.addEventListener(\"click\", (e) => {\n    //   if (e.clientX <= )\n    // });\n    this.game.player.energy.pop();\n    this.game.projectiles.push(\n      new Projectile(\n        this.position.x,\n        this.position.y,\n        this.sprite,\n        20,\n        3,\n        20,\n        this.game,\n        this.atkType\n      )\n    );\n  }\n}\n","import Card from \"./card\";\nimport Projectile from \"../player/projectile\";\n\nexport default class MissleAttack extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 1;\n    this.image = \"assets/missleAtk.png\";\n    this.description = `Fire your missles. Missles do full damage vs Armor and half damage vs Shields`;\n    this.position = {\n      x: this.game.player.misslePos.x,\n      y: this.game.player.misslePos.y,\n    };\n    this.sprite = document.getElementById(\"img_missle\");\n    this.game = game;\n    this.atkType = \"missle\";\n  }\n\n  action() {\n    this.game.player.energy.pop();\n    this.game.projectiles.push(\n      new Projectile(\n        this.position.x,\n        this.position.y,\n        this.sprite,\n        20,\n        20,\n        10,\n        this.game,\n        this.atkType\n      )\n    );\n  }\n}\n","import Projectile from \"../player/projectile\";\nimport Card from \"./card\";\n\nexport default class Overcharge extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 1;\n    this.power = 20;\n    this.image = \"assets/overcharge.png\";\n    this.description =\n      \"Sacrifice 20 shield points to boost your lasers by 20 for one attack\";\n    this.position = {\n      x: this.game.player.laserPos.x,\n      y: this.game.player.laserPos.y,\n    };\n    this.y = 240;\n    this.sprite = document.getElementById(\"img_laser\");\n    this.cardImg = document.getElementById(\"img_overchargeCard\");\n    this.atkType = \"overcharge\";\n    this.type = \"overcharge\";\n  }\n\n  check() {\n    if (this.game.player.energy - this.cost < 0) {\n      document.getElementById(\"card-description-span\").innerText =\n        \"Not enough energy\";\n      return false;\n    }\n\n    if (this.game.player.shields - this.power < 0) {\n      document.getElementById(\"card-description-span\").innerText =\n        \"Need at least 20 shields\";\n      return false;\n    }\n\n    return true;\n  }\n\n  action() {\n    this.game.player.shields -= 20;\n    this.game.player.energy.pop();\n    this.game.projectiles.push(\n      new Projectile(\n        this.position.x,\n        this.position.y,\n        this.sprite,\n        20,\n        6,\n        20,\n        this.game,\n        this.atkType\n      )\n    );\n  }\n}\n","export default class NewShields {\n  constructor(x, y, game) {\n    this.image = document.getElementById(\"img_newshields\");\n    this.position = {\n      x: x,\n      y: y,\n    };\n    this.width = 256;\n    this.height = 256;\n    this.loopIndex = 0;\n    this.frames = 0;\n    this.game = game;\n  }\n\n  // give it the image\n  // fX (nth frame x cord starts here (top left))\n  // fX (nth frame y cord starts here (top left))\n  drawFrame(fX, fY, ctx) {\n    debugger;\n    ctx.drawImage(\n      this.image,\n      fX * this.width,\n      fY * this.height,\n      this.width,\n      this.height,\n      this.game.player.position.x - 5,\n      this.game.player.position.y + 10,\n      150,\n      150\n    );\n  }\n\n  draw(ctx) {\n    if (this.frames > 2) {\n      this.loopIndex += 1;\n      this.frames = 0;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    } else {\n      this.drawFrame(this.loopIndex, 0, ctx);\n      this.frames += 1;\n    }\n\n    if (this.loopIndex > 37) {\n      this.game.elements.pop();\n    }\n\n    // this.drawFrame(3, 0, this.position.x, this.position.y, ctx);\n    // this.drawFrame(4, 0, this.position.x, this.position.y, ctx);\n  }\n\n  update(dt) {}\n}\n","import Card from \"./card\";\nimport Shields from \"../player/newShields\";\n\nexport default class Recharge extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 1;\n    this.image = \"assets/recharge.png\";\n    this.power = 10;\n    this.description = `Charge your shields by ${this.power}`;\n    this.game = game;\n  }\n\n  action() {\n    this.game.player.shields += this.power;\n    this.game.player.energy.pop();\n    this.game.elements.push(\n      new Shields(\n        this.game.player.position.x,\n        this.game.player.position.y,\n        this.game\n      )\n    );\n  }\n}\n","import Card from \"./card\";\n\nexport default class SyphonEnergy extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 0;\n    this.image = \"assets/syphonEnergy.png\";\n    this.description = \"Double laser damage at cost of -1 max energy\";\n    this.y = 320;\n    this.cardImg = document.getElementById(\"img_syphonCard\");\n  }\n\n  action() {\n    this.game.player.syphonEnergy();\n    this.game.player.maxEnergy -= 1;\n    this.game.player.lasers *= 2;\n  }\n}\n","import Card from \"./card\";\nimport Projectile from \"../player/projectile\";\n\nexport default class Salvo extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 1;\n    this.image = \"assets/salvo.png\";\n    this.description = `Launch a 3 missle salvo`;\n    this.position = {\n      x: this.game.player.misslePos.x,\n      y: this.game.player.misslePos.y,\n    };\n    this.sprite = document.getElementById(\"img_missle\");\n    this.game = game;\n    this.atkType = \"missle\";\n    this.y = 480;\n    this.cardImg = document.getElementById(\"img_salvoCard\");\n    this.type = \"salvo\";\n  }\n\n  action() {\n    this.game.player.energy.pop();\n    this.game.projectiles.push(\n      new Projectile(\n        this.position.x,\n        this.position.y,\n        this.sprite,\n        20,\n        20,\n        10,\n        this.game,\n        this.atkType\n      )\n    );\n    setTimeout(() => {\n      this.game.projectiles.push(\n        new Projectile(\n          this.position.x,\n          this.position.y,\n          this.sprite,\n          20,\n          20,\n          10,\n          this.game,\n          this.atkType\n        )\n      );\n    }, 1000);\n    setTimeout(() => {\n      this.game.projectiles.push(\n        new Projectile(\n          this.position.x,\n          this.position.y,\n          this.sprite,\n          20,\n          20,\n          10,\n          this.game,\n          this.atkType\n        )\n      );\n    }, 2000);\n  }\n}\n","import Card from \"./card\";\n\nexport default class TuneUp extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 2;\n    this.image = \"assets/tuneUp.png\";\n    this.power = 5;\n    this.description = `Calibrate your laser to permanently increase damage by ${this.power}`;\n    this.game = game;\n    this.y = 400;\n    this.cardImg = document.getElementById(\"img_tuneUpCard\");\n  }\n\n  action() {\n    this.game.player.lasers += this.power;\n    this.game.player.energy.pop();\n  }\n}\n","import Card from \"./cards/card\";\nimport DrainShield from \"./cards/drainShield\";\nimport InstallUpdate from \"./cards/installUpdate\";\nimport LaserAttack from \"./cards/laserAtk\";\nimport MissleAttack from \"./cards/missleAtk\";\nimport Overcharge from \"./cards/overcharge\";\nimport Recharge from \"./cards/recharge\";\nimport SyphonEnergy from \"./cards/syphonEnergy\";\nimport Salvo from \"./cards/salvo\";\nimport TuneUp from \"./cards/tuneUp\";\n\nexport default class Hand {\n  constructor(game, startingCards) {\n    this.game = game;\n    const STARTING_CARDS = [\n      new Recharge(this.game),\n      new Recharge(this.game),\n      new Recharge(this.game),\n\n      new LaserAttack(this.game),\n      new LaserAttack(this.game),\n      new LaserAttack(this.game),\n\n      new MissleAttack(this.game),\n      new MissleAttack(this.game),\n      new MissleAttack(this.game),\n    ];\n    this.deck = STARTING_CARDS.slice();\n    this.cardPile = this.deck.slice();\n    this.playerCards = [];\n    this.currentHand = [];\n    this.discardPile = [];\n    this.disabled = false;\n    this.initializeDeck(startingCards);\n    this.startTurn();\n    this.playCard = this.playCard.bind(this);\n  }\n\n  initializeDeck(startingCards) {\n    startingCards.forEach((card) => {\n      this.deck.push(card);\n    });\n    if (startingCards.length > 1) {\n      // let extra = startingCards.length - 2;\n      let extra = startingCards.length - 1;\n      for (let i = 0; i < extra; i++) {\n        this.deck.push(new MissleAttack(this.game));\n        this.deck.push(new LaserAttack(this.game));\n        this.deck.push(new Recharge(this.game));\n      }\n    }\n  }\n\n  // takes the players complete deck and SHUFFLES it into\n  // playerCards\n  resetDeck() {\n    this.cardPile = this.deck.slice();\n    this.currentHand.forEach((card) => {\n      let idx = this.cardPile.indexOf(card);\n      this.cardPile.splice(idx, 1);\n    });\n    while (this.cardPile.length) {\n      const rando = ~~(Math.random() * this.cardPile.length);\n      this.playerCards.push(...this.cardPile.splice(rando, rando + 1));\n    }\n  }\n\n  //\n  startTurn() {\n    this.game.playerTurn = true;\n    this.disabled = false;\n    this.game.player.initializeEnergy();\n    for (let i = 0; i < 5; i++) {\n      if (!this.playerCards.length) {\n        this.resetDeck();\n        this.discardPile = [];\n      }\n      this.currentHand.push(this.playerCards.shift());\n    }\n    this.render();\n  }\n\n  playCard(card, i) {\n    return () => {\n      if (this.game.playerTurn && card.check() && this.disabled === false) {\n        this.disabled = true;\n        setTimeout(() => {\n          this.disabled = false;\n        }, 2500);\n        card.action();\n        this.discardPile.push(card);\n        document.getElementById(`card-${i}`).classList.add(\"playCard\");\n        let idx = this.currentHand.indexOf(this);\n        this.currentHand.splice(idx, 1);\n\n        setTimeout(() => {\n          document.getElementById(`card-${i}`).remove();\n        }, 1450);\n        // delete this.currentHand[i];\n        // this.render();\n      }\n    };\n  }\n\n  endTurn() {\n    debugger;\n    let discards = Array.from(document.getElementsByClassName(\"card\"));\n    // let discards = document.getElementById(\"player-hand\").childNodes;\n    // for (card of discards) {\n    //   card.classList.add(\"discardCard\");\n    // }\n    discards.forEach((card, i) => {\n      card.classList.add(\"discardCard\");\n    });\n\n    // document\n    //   .getElementById(\"cb-0\")\n    //   .removeEventListener(\"click\", this.playcard, true);\n\n    // Array.from(document.getElementsByClassName(\"card-button\")).forEach(\n    //   (button) => {\n    //     debugger;\n    //     button.removeEventListener(\"click\", this.playCard, true);\n    //   }\n    // );\n    // Array.from(document.getElementsByClassName(\"card-button\")).forEach(\n    //   (button) => {\n    //     debugger;\n    //     button.removeEventListener(\"click\", playCard);\n    //   }\n    // );\n\n    // end the players turn\n    this.game.playerTurn = false;\n\n    // discard the players current hand\n    this.discardHand();\n\n    // have the computer play its turn\n    this.game.computerTurn();\n  }\n\n  discardHand() {\n    // take all the cards and put them in the discard pile\n    while (this.currentHand.length) {\n      this.discardPile.push(this.currentHand.pop());\n    }\n    let discards = Array.from(document.getElementsByClassName(\"no-card\"));\n    discards.forEach((card) => {\n      setTimeout(() => {\n        card.innerHTML = \"\";\n      }, 1500);\n    });\n  }\n\n  endGame() {\n    this.deck = null;\n    this.currentHand = null;\n  }\n\n  render() {\n    if (this.currentHand === null) return;\n    // clear the hand before each re render\n    // document.getElementById(\"player-hand\").innerHTML = \"\";\n\n    // iterate through the current hand\n\n    this.currentHand.forEach((card, i) => {\n      // create an img element and set it to the cards image\n      const cardImg = document.createElement(\"img\");\n      cardImg.src = card.image;\n      cardImg.classList.add(\"card\");\n      cardImg.id = `card-${i}`;\n      document.getElementById(`nc-${i}`).appendChild(cardImg);\n\n      // create an li and attach the img to it\n\n      // const listItem = document.createElement(\"li\").appendChild(cardImg);\n      // add a click listener to the li\n      // if its the players turn, and the player has enough energy to play the card\n      // play the card, add the card to the discard pile, delete the card from the hand, and re render\n      cardImg.addEventListener(\"click\", this.playCard(card, i), true);\n      // if a player doesnt have the energy to play the card\n      // display error message in error box\n      // if (this.game.player.energy - card.cost < 0) {\n      //   document.getElementById(\"card-errors\").innerText =\n      //     \"Not enough energy\";\n      //   setInterval(() => {\n      //     document.getElementById(\"card-errors\").innerText = \"\";\n      //   }, 5000);\n      // }\n      // if (this.game.player.energy - card.cost < 0) {\n      //   document.getElementById(\"card-description\").innerText =\n      //     \"Not enough energy\";\n      // }\n      // if a player does\n      cardImg.addEventListener(\"mouseover\", () => {\n        document.getElementById(\"card-description\").classList.remove(\"hidden\");\n        document.getElementById(\n          \"card-description-span\"\n        ).innerText = `${card.description}`;\n      });\n      cardImg.addEventListener(\"mouseout\", () => {\n        document.getElementById(\"card-description\").classList.add(\"hidden\");\n        document.getElementById(\"card-description-span\").innerText = ``;\n      });\n\n      // document.getElementById(\"player-hand\").appendChild(listItem);\n    });\n  }\n}\n","export default class Energy {\n  constructor(x, y) {\n    this.position = {\n      x: x,\n      y: y,\n    };\n    this.width = 32;\n    this.height = 32;\n    this.loopIndex = 0;\n    this.frames = 0;\n    this.image = document.getElementById(\"img_energyBall\");\n  }\n\n  drawFrame(fX, fY, ctx) {\n    ctx.drawImage(\n      this.image,\n      fX * this.width,\n      fY * this.height,\n      this.width,\n      this.height,\n      this.position.x,\n      this.position.y,\n      32,\n      32\n    );\n  }\n\n  draw(ctx) {\n    if (this.frames > 3) {\n      this.loopIndex += 1;\n      this.frames = 0;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    } else {\n      this.drawFrame(this.loopIndex, 0, ctx);\n      this.frames += 1;\n    }\n\n    if (this.loopIndex === 11) {\n      this.loopIndex = 0;\n    }\n\n    // this.drawFrame(3, 0, this.position.x, this.position.y, ctx);\n    // this.drawFrame(4, 0, this.position.x, this.position.y, ctx);\n  }\n}\n","export default class Fire {\n  constructor(game) {\n    this.position = {\n      x: game.player.position.x + game.player.laserPos.x,\n      y: game.player.position.y + game.player.laserPos.y,\n    };\n    this.sprite = document.getElementById(\"img_laser\");\n    this.game = game;\n    this.speed = 10;\n    this.width = 20;\n    this.height = 3;\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      this.sprite,\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n  }\n\n  update(dt) {\n    this.position.x += this.speed;\n\n    if (this.position.x >= this.game.gameWidth) {\n      this.game.projectiles.splice(this.game.projectiles.indexOf(this), 1);\n    }\n  }\n}\n","import Energy from \"./energy\";\nimport Fire from \"./fire\";\n\nexport default class Player {\n  constructor(game) {\n    this.image = document.getElementById(\"img_player\");\n    this.poweredUp = document.getElementById(\"img_poweredUp\");\n    // this.image = document.getElementById(\"img_player\");\n    this.gameHeight = game.gameHeight;\n    this.position = {\n      x: 200,\n      //   y: game.gameHeight / 2 - this.height / 2,\n      y: 200,\n    };\n    this.width = 64;\n    this.height = 64;\n    this.shields = 10;\n    this.armor = 50;\n    this.maxEnergy = 3;\n    this.energy = [];\n    this.lasers = 50;\n    this.missles = 50;\n    this.laserPos = {\n      x: 115,\n      y: 100,\n    };\n    this.misslePos = {\n      x: 90,\n      y: 105,\n    };\n    this.receiveAttack = 305;\n    // this.shieldX = this.position.x;\n    // this.shieldY = this.position.y;\n    // this.speed = 0;\n    this.speedX = 0;\n    this.speedY = 0;\n    this.maxSpeedX = 3;\n    this.maxSpeedY = 3;\n\n    this.game = game;\n    this.loopIndex = 0;\n    this.frames = 0;\n    this.disableLaser = false;\n    this.initializeEnergy();\n  }\n\n  initializeEnergy() {\n    this.energy = [];\n    const energyX = 710;\n    for (let i = 0; i < this.maxEnergy; i++) {\n      let x = i * 40 + energyX;\n      this.energy.push(new Energy(x, 50));\n    }\n  }\n\n  syphonEnergy() {\n    this.image = this.poweredUp;\n  }\n\n  receiveDamage(atkType) {\n    let dmg;\n    switch (atkType) {\n      case \"small\":\n        if (this.shields >= this.game.enemy.lasers) {\n          dmg = this.game.enemy.lasers;\n          this.shields -= dmg;\n        } else if (this.shields - this.game.enemy.lasers < 0) {\n          dmg = -(this.shields - this.game.enemy.lasers);\n          this.armor -= dmg / 2;\n          this.shields = 0;\n          //   this.shields !== 0 &&\n          //   this.shields <= this.game.enemy.lasers\n          // ) {\n          //   dmg = this.shields;\n          //   this.shields = 0;\n        } else if (this.shields === 0) {\n          dmg = this.game.enemy.lasers / 2;\n          this.armor -= dmg;\n        }\n        break;\n      case \"laser\":\n        if (this.shields >= this.game.enemy.lasers) {\n          dmg = this.game.enemy.lasers;\n          this.shields -= dmg;\n        } else if (this.shields - this.game.enemy.lasers < 0) {\n          dmg = -(this.shields - this.game.enemy.lasers);\n          this.armor -= dmg / 2;\n          this.shields = 0;\n          //   this.shields !== 0 &&\n          //   this.shields <= this.game.enemy.lasers\n          // ) {\n          //   dmg = this.shields;\n          //   this.shields = 0;\n        } else if (this.shields === 0) {\n          dmg = this.game.enemy.lasers / 2;\n          this.armor -= dmg;\n        }\n        break;\n      case \"missle\":\n        if (this.shields > this.game.enemy.missles) {\n          dmg = this.game.enemy.missles / 2;\n          this.shields -= dmg;\n        } else if (\n          this.shields !== 0 &&\n          this.shields <= this.game.enemy.missles\n        ) {\n          dmg = this.shields;\n          this.shields = 0;\n        } else if (this.shields === 0) {\n          dmg = this.game.enemy.missles;\n          this.armor -= dmg;\n        }\n      default:\n        break;\n    }\n  }\n\n  drawFrame(fX, fY, ctx) {\n    ctx.drawImage(\n      this.image,\n      fX * this.width,\n      fY * this.height,\n      this.width,\n      this.height,\n      this.game.player.position.x,\n      this.game.player.position.y,\n      130,\n      130\n    );\n  }\n\n  draw(ctx) {\n    if (this.frames > 5) {\n      this.loopIndex += 1;\n      this.frames = 0;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    } else {\n      this.drawFrame(this.loopIndex, 0, ctx);\n      this.frames += 1;\n    }\n\n    if (this.loopIndex === 5) {\n      this.loopIndex = 0;\n    }\n\n    // this.drawFrame(3, 0, this.position.x, this.position.y, ctx);\n    // this.drawFrame(4, 0, this.position.x, this.position.y, ctx);\n  }\n\n  update(dt) {\n    // this.position.x += this.speedX;\n    this.position.x += this.speedX;\n    this.position.y += this.speedY;\n\n    if (this.position.x <= 100) this.position.x = 100;\n    if (this.position.x >= 600) this.position.x = 600;\n    if (this.position.y <= 0) this.position.y = 0;\n    if (this.position.y >= 500) this.position.y = 500;\n  }\n\n  // moveToStartPos() {\n  //   const angle = Math.atan2(this.position.y - 200, this.position.x - 200);\n  //   console.log(angle);\n  // }\n\n  moveUp() {\n    this.speedY = -this.maxSpeedY;\n  }\n\n  moveDown() {\n    this.speedY = this.maxSpeedY;\n  }\n\n  moveLeft() {\n    this.speedX = -this.maxSpeedX;\n  }\n\n  moveRight() {\n    this.speedX = this.maxSpeedX;\n  }\n\n  stopY() {\n    this.speedY = 0;\n  }\n\n  stopX() {\n    this.speedX = 0;\n  }\n\n  fire() {\n    if (!this.disableLaser) {\n      this.disableLaser = true;\n      this.game.projectiles.push(new Fire(this.game));\n      setTimeout(() => {\n        this.disableLaser = false;\n      }, 200);\n    }\n  }\n}\n\n// if (this.position.y < 210) {\n//   this.position.y += this.speed;\n// } else {\n//   this.speed = -this.speed;\n//   this.position.y += this.speed;\n// }\n// if (this.position.y > 190) {\n//   this.position.y += this.speed;\n// } else {\n//   this.speed = -this.speed;\n//   this.position.y += this.speed;\n// }\n","import Animation from \"../util/animation\";\nimport Energy from \"./energy\";\n\nexport default class PlayerStatus {\n  constructor(game) {\n    this.position = {\n      x: 210,\n      y: 30,\n    };\n    this.game = game;\n    // this.render();\n  }\n\n  // render() {\n  //   this.renderShields();\n  //   this.renderArmor();\n  //   this.renderEnergy();\n  //   this.renderLasers();\n  //   this.renderMissles();\n  // }\n\n  // renderShields() {\n  //   this.shields = this.game.player.shields;\n  //   this.armor = this.game.player.armor;\n  //   // const playerShields = document.createElement(\"span\");\n  //   // playerShields.innerText = `${this.shields}`;\n  //   // document.getElementById(\"player-shields\").appendChild(playerShields);\n  //   document.getElementById(\n  //     \"player-armor-num\"\n  //   ).innerText = `Dad Shields: ${this.shields} Dad Armor: ${this.armor}`;\n  // }\n  // renderArmor() {\n  //   // // const playerArmor = document.createElement(\"span\");\n  //   // // playerArmor.innerText = `${this.armor}`;\n  //   // // document.getElementById(\"player-armor\").appendChild(playerArmor);\n  //   // document.getElementById(\"player-armor-num\").innerText = `${this.armor}`;\n  // }\n  // renderEnergy() {\n  //   this.energy = this.game.player.energy;\n  //   // const playerEnergy = document.createElement(\"span\");\n  //   // playerEnergy.innerText = `${this.energy}`;\n  //   // document.getElementById(\"player-energy\").appendChild(playerEnergy);\n  //   document.getElementById(\"player-energy-num\").innerText = `${this.energy}`;\n  // }\n\n  // renderLasers() {\n  //   this.lasers = this.game.player.lasers;\n  //   document.getElementById(\"player-lasers-num\").innerText = `${this.lasers}`;\n  // }\n\n  // renderMissles() {\n  //   this.missles = this.game.player.missles;\n  //   document.getElementById(\"player-missles-num\").innerText = `${this.missles}`;\n  // }\n\n  renderEnergy(ctx) {\n    this.game.player.energy.forEach((ball) => {\n      ball.draw(ctx);\n    });\n  }\n\n  draw(ctx) {\n    // const energy = this.game.player.energy;\n    // const energyX = 500;\n    // for (let i = 0; i < energy; i++) {\n    //   debugger;\n    //   let x = i * 40 + energyX;\n    //   let dad = new Energy(x, 40);\n    //   dad.draw(ctx);\n    // }\n    this.renderEnergy(ctx);\n    ctx.fillStyle = \"#6f6\";\n    ctx.textAlign = \"left\";\n    ctx.fillText(`Dad Stats:`, this.position.x, this.position.y);\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\n      `Shields: ${this.game.player.shields}    Lasers: ${this.game.player.lasers}`,\n      // `Shields: ${this.game.player.shields}    Lasers: ${this.game.player.lasers}       Energy: ${this.game.player.energy}`,\n      this.position.x + 10,\n      this.position.y + 25\n    );\n    ctx.fillText(\n      `Armor: ${this.game.player.armor}      Missles: ${this.game.player.missles}`,\n      this.position.x + 10,\n      this.position.y + 50\n    );\n    ctx.fillText(`Draw Pile: ${this.game.hand.playerCards.length}`, 1085, 780);\n    ctx.fillText(\n      `Discard Pile: ${this.game.hand.discardPile.length}`,\n      1085,\n      820\n    );\n    ctx.fillStyle = \"#ffbb00\";\n    ctx.fillText(`Energy`, 765, 40);\n\n    // ctx.fillStyle = \"blue\";\n    // ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n    // ctx.fillStyle = \"white\";\n    // ctx.fillText(\n    //   `Shields: ${this.game.player.shields}`,\n    //   this.position.x + 10,\n    //   this.position.y + 30\n    // );\n    // ctx.fillText(\n    //   `Armor: ${this.game.player.armor}`,\n    //   this.position.x + 10,\n    //   this.position.y + 60\n    // );\n    // ctx.fillText(\n    //   `Energy: ${this.game.player.energy}`,\n    //   this.position.x + 10,\n    //   this.position.y + 90\n    // );\n  }\n\n  update() {}\n}\n","import Player from \"./player\";\n\nexport default class InputHandler {\n  constructor(player) {\n    document.addEventListener(\"keydown\", (e) => {\n      switch (e.key) {\n        case \"w\":\n          player.moveUp();\n          break;\n        case \"s\":\n          player.moveDown();\n          break;\n        case \"a\":\n          player.moveLeft();\n          break;\n        case \"d\":\n          player.moveRight();\n          break;\n        case \" \":\n          e.preventDefault();\n          if (player.game.gameState === 0) player.fire();\n          if (player.game.gameState === 1) player.fire();\n          if (player.game.gameState === 8) player.fire();\n\n          break;\n        default:\n          break;\n      }\n    });\n\n    document.addEventListener(\"keyup\", (e) => {\n      switch (e.key) {\n        case \"w\":\n          if (player.speedY <= 0) player.stopY();\n          break;\n        case \"s\":\n          if (player.speedY >= 0) player.stopY();\n          break;\n        case \"a\":\n          if (player.speedX <= 0) player.stopX();\n          break;\n        case \"d\":\n          if (player.speedX >= 0) player.stopX();\n          break;\n        case \" \":\n          break;\n        default:\n          break;\n      }\n    });\n  }\n}\n","import Explosion from \"../util/explosion\";\nimport Card from \"./card\";\n\nexport default class StartGame extends Card {\n  constructor(game) {\n    super(game);\n    this.y = 560;\n    this.game = game;\n    this.description = \"Start game\";\n\n    this.image = \"assets/dud.png\";\n    this.cardImg = document.getElementById(\"btn-start\");\n  }\n\n  collision(laser, card) {\n    let laserRight = laser.position.x + laser.width;\n    let laserY = laser.position.y;\n    let topLeft = card.y;\n    let bottomLeft = card.y + 60;\n    let cardX = 1200;\n\n    if (laserRight >= cardX && laserY >= topLeft && laserY <= bottomLeft) {\n      const cardIdx = this.game.startingChoices.indexOf(this);\n      this.game.startingChoices.splice(cardIdx, 1);\n      const laserIdx = this.game.projectiles.indexOf(laser);\n      this.game.projectiles.splice(laserIdx, 1);\n      this.game.elements.push(\n        new Explosion(laser.position.x, laser.position.y, this.game)\n      );\n      // this.game.endScreen();\n      this.game.manageIntro(this.game.startingCards);\n    }\n  }\n}\n","import Explosion from \"../util/explosion\";\n\nexport default class Button {\n  constructor(image, x, y, type, game, width, height) {\n    this.image = image;\n    this.x = x;\n    this.y = y;\n    this.game = game;\n    this.type = type;\n    this.width = width;\n    this.height = height;\n  }\n\n  draw(ctx) {\n    ctx.drawImage(this.image, this.x, this.y, this.width, this.height);\n  }\n\n  hideAll() {\n    const btns = document.getElementsByClassName(\"start-screen-div\");\n    Array.from(btns).forEach((btn) => {\n      btn.classList.add(\"hidden\");\n    });\n  }\n\n  collision(laser) {\n    let laserRight = laser.position.x + laser.width;\n    let laserY = laser.position.y;\n    let topLeft = this.y;\n    let bottomLeft = this.y + this.height;\n\n    if (laserRight >= this.x && laserY >= topLeft && laserY <= bottomLeft) {\n      const laserIdx = this.game.projectiles.indexOf(laser);\n      this.game.projectiles.splice(laserIdx, 1);\n      this.game.elements.push(\n        new Explosion(laser.position.x, laser.position.y, this.game)\n      );\n      this.hideAll();\n      switch (this.type) {\n        case \"start\":\n          this.game.selectCards();\n          break;\n        case \"instructions\":\n          document.getElementById(\"ss-instructions\").classList.remove(\"hidden\");\n          break;\n        case \"story\":\n          document.getElementById(\"ss-story\").classList.remove(\"hidden\");\n          break;\n        case \"illustration\":\n          document.getElementById(\"rules-pic-box\").classList.remove(\"hidden\");\n          document\n            .getElementById(\"rules-pic-box\")\n            .addEventListener(\"click\", () => {\n              document.getElementById(\"rules-pic-box\").classList.add(\"hidden\");\n            });\n          break;\n        case \"credits\":\n          document.getElementById(\"ss-credits\").classList.remove(\"hidden\");\n          break;\n        case \"reset\":\n          break;\n        case \"linked in\":\n          window.open(\"https://www.linkedin.com/in/paul-stonebraker\", \"_blank\");\n          break;\n        case \"angel list\":\n          window.open(\"https://angel.co/u/paul-stonebraker\", \"_blank\");\n          break;\n        case \"github\":\n          window.open(\"https://github.com/wpstonebraker\", \"_blank\");\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  update(dt) {\n    if (this.game.projectiles.length >= 1) {\n      this.game.projectiles.forEach((projectile) => {\n        this.collision(projectile);\n      });\n    }\n  }\n}\n","import Explosion from \"../util/explosion\";\nimport EnemyProjectile from \"./enemyProjectile\";\nimport EnemyShields from \"./enemyShields\";\n\nexport default class SmallEnemy {\n  constructor(game, x, y) {\n    this.game = game;\n    this.image = document.getElementById(\"img_smallEnemy\");\n    this.targetImage = document.getElementById(\"img_smallEnemyHighlight\");\n    this.position = {\n      x: x,\n      y: y,\n    };\n    this.size = 100;\n    this.receiveAttackTop = this.position.y;\n    this.receiveAttackBottom = this.position.y + this.size;\n    this.receiveAttackX = 1200;\n    this.shields = 10;\n    this.armor = 10;\n    this.laserSprite = document.getElementById(\"img_npc1a1\");\n    this.lasers = 5;\n    this.name = \"Alien Scout\";\n    this.destroyed = false;\n    this.nextAction = \"Laser Attack\";\n  }\n\n  draw(ctx) {\n    if (!this.destroyed) {\n      let playerPosY = this.game.player.position.y + 100;\n      if (\n        playerPosY >= this.position.y &&\n        playerPosY <= this.position.y + this.size\n      ) {\n        this.renderStats(ctx);\n        this.renderTarget(ctx);\n        ctx.drawImage(\n          this.targetImage,\n          this.position.x,\n          this.position.y,\n          this.size,\n          this.size\n        );\n      } else {\n        ctx.drawImage(\n          this.image,\n          this.position.x,\n          this.position.y,\n          this.size,\n          this.size\n        );\n      }\n    }\n  }\n\n  renderStats(ctx) {\n    // ctx.beginPath();\n    // ctx.moveTo(this.position.x + 50, this.position.y + 70);\n    // ctx.lineTo(1400, 400);\n    // ctx.lineWidth = 5;\n    // ctx.strokeStyle = \"hsla(0, 100%, 50%, 0.25)\";\n    // ctx.stroke();\n    ctx.fillStyle = \"hsla(0, 100%, 50%, 0.25)\";\n    ctx.fillRect(1400, 400, 130, 70);\n    ctx.fillStyle = \"white\";\n    ctx.fillText(`Shields: ${this.shields}`, 1405, 420);\n    ctx.fillText(`Armor: ${this.armor}`, 1405, 440);\n    ctx.fillText(`Lasers: ${this.lasers}`, 1405, 460);\n\n    // ctx.fillStyle = \"white\";\n    // ctx.fillText(this.name, 970, 20);\n    // ctx.fillText(\n    //   `Shields: ${this.shields}     Lasers: ${this.lasers}`,\n    //   1120,\n    //   55\n    // );\n    // ctx.fillText(`Armor: ${this.armor}`, 1120, 80);\n  }\n\n  renderTarget(ctx) {\n    ctx.fillStyle = \"hsla(0, 100%, 50%, 1)\";\n    ctx.textAlign = \"center\";\n    ctx.fillText(this.name, 1250, 30);\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Next Turn:\", 1250, 55);\n\n    ctx.fillText(this.nextAction, 1250, 80);\n  }\n\n  update(dt) {\n    if (this.armor <= 0 && this.position.x > 1500) {\n      let idx = this.game.elements.indexOf(this);\n      this.game.elements.splice(idx, 1);\n      idx = this.game.enemies.indexOf(this);\n      this.game.enemies.splice(idx, 1);\n    } else if (this.armor <= 0) {\n      this.position.x += 3;\n    } else if (this.position.x > 1200) {\n      this.position.x -= 3;\n    }\n  }\n\n  receiveDamage(atkType) {\n    let dmg;\n    let type;\n    switch (atkType) {\n      case \"laser\":\n        if (this.shields >= this.game.player.lasers) {\n          dmg = this.game.player.lasers;\n          type = \"shields\";\n          this.shields -= dmg;\n        } else if (this.shields === 0) {\n          dmg = this.game.player.lasers / 2;\n          this.armor -= dmg;\n          type = \"armor\";\n        } else if (this.shields - this.game.player.lasers < 0) {\n          dmg = -(this.shields - this.game.player.lasers) / 2;\n          this.armor -= dmg;\n          this.shields = 0;\n          type = \"armor\";\n        }\n        break;\n      case \"overcharge\":\n        if (this.shields >= this.game.player.lasers + 20) {\n          dmg = this.game.player.lasers + 20;\n          this.shields -= dmg;\n          type = \"shields\";\n        } else if (this.shields === 0) {\n          dmg = (this.game.player.lasers + 20) / 2;\n          this.armor -= dmg;\n          type = \"armor\";\n        } else if (this.shields - (this.game.player.lasers + 20) < 0) {\n          dmg = -(this.shields - (this.game.player.lasers + 20)) / 2;\n          this.armor -= dmg;\n          this.shields = 0;\n          type = \"armor\";\n        }\n        break;\n      case \"missle\":\n        if (this.shields > this.game.player.missles / 2) {\n          dmg = this.game.player.missles / 2;\n          this.shields -= dmg;\n          type = \"shields\";\n        } else if (this.shields === 0) {\n          dmg = this.game.player.missles;\n          this.armor -= dmg;\n          type = \"armor\";\n        } else if (\n          this.shields !== 0 &&\n          this.shields <= this.game.player.missles\n        ) {\n          dmg = this.shields;\n          this.armor -= dmg;\n          this.shields = 0;\n          type = \"armor\";\n        }\n\n      default:\n        break;\n    }\n\n    if (this.armor <= 0) this.destroyed = true;\n    // if (this.armor <= 0) {\n    //   debugger;\n    //   let idx = this.game.elements.indexOf(this);\n    //   this.game.elements.splice(idx, 1);\n    //   idx = this.game.enemies.indexOf(this);\n    //   this.game.enemies.splice(idx, 1);\n    // }\n\n    // self.game.elements.push(\n    //   new EnemyShields(self.position.x, self.position.y, self.game)\n    // );\n\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n    document.getElementById(\n      \"card-description-span\"\n    ).innerText = `Enemy's ${type} receives ${dmg} damage!`;\n    // document.getElementById(\n    //   \"enemy-display-span\"\n    // ).innerText = `Enemy's armor is at ${this.armor}`;\n\n    // this.game.enemyStatus.render();\n  }\n\n  action() {\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n    document.getElementById(\n      \"card-description-span\"\n    ).innerText = `Enemy attacks for ${this.lasers} laser damage`;\n    const angle = Math.atan2(\n      this.position.y + 80 - (this.game.player.position.y + 100),\n      this.position.x - (this.game.player.position.x + 50)\n    );\n    const velocity = {\n      x: Math.cos(angle),\n      y: Math.sin(angle),\n    };\n    this.game.projectiles.push(\n      new EnemyProjectile(\n        this.position.x,\n        this.position.y + 80,\n        this.laserSprite,\n        32,\n        16,\n        -15,\n        this.game,\n        \"small\",\n        velocity\n      )\n    );\n  }\n\n  renderShields() {\n    this.game.elements.push(\n      new EnemyShields(this.position.x, this.position.y, this.size, this.game)\n    );\n  }\n\n  renderExplosion() {\n    this.game.elements.push(\n      new Explosion(this.position.x, this.position.y, this.game)\n    );\n  }\n\n  // moveToStartPos(x, y) {\n  //   const angle = Math.atan2(this.position.y - 200, this.position.x - 200);\n  //   console.log(angle);\n  // }\n}\n","import Card from \"./cards/card\";\nimport Enemy from \"./enemy/enemy\";\nimport Hand from \"./hand\";\nimport Player from \"./player/player\";\nimport PlayerStatus from \"./player/player_status\";\nimport EnemyStatus from \"./enemy/enemy_status\";\nimport Overcharge from \"./cards/overcharge\";\nimport Explosion from \"./util/explosion\";\nimport InputHandler from \"./player/Input\";\nimport InstallUpdate from \"./cards/installUpdate\";\nimport StartGame from \"./cards/startGame\";\nimport SyphonEnergy from \"./cards/syphonEnergy\";\nimport Salvo from \"./cards/salvo\";\nimport TuneUp from \"./cards/tuneUp\";\nimport Button from \"./buttons/button\";\nimport SmallEnemy from \"./enemy/smallEnemy\";\n\nexport default class Game {\n  constructor(gameWidth, gameHeight) {\n    this.gameWidth = gameWidth;\n    this.gameHeight = gameHeight;\n    this.background = document.getElementById(\"img_background\");\n    this.projectiles = [];\n    this.startingChoices = [];\n    this.gameState = 0;\n    this.startingCards = [];\n    this.enemies = [];\n    this.elements = [];\n    this.playerTurn = true;\n    this.hasStarted = false;\n    this.player = new Player(this);\n    this.target;\n    this.gameover = false;\n    this.isOver = this.isOver.bind(this);\n    this.topDash = document.getElementById(\"img_topDash\");\n    this.bottomDash = document.getElementById(\"img_bottomDash\");\n    this.topScreen = document.getElementById(\"img_topTerminal\");\n    this.energyScreen = document.getElementById(\"img_energyTerminal\");\n  }\n\n  pregame() {\n    this.elements = [this.player];\n    new InputHandler(this.player);\n    this.initializeStartScreenButtons();\n  }\n\n  drawSelectScreenWords(ctx) {\n    ctx.font = \"150px VT323\";\n    ctx.fillStyle = \"yellow\";\n    ctx.fillText(\"SPACE DAD\", 150, 200);\n    ctx.font = \"25px VT323\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Move Up and Down with W and S\", 200, 500);\n    ctx.fillText(\"Move Left and Right with A and D\", 200, 520);\n    ctx.fillText(\"Use space to shoot a selection\", 200, 600);\n  }\n\n  initializeStartScreenButtons() {\n    const btnX = 725;\n    const story = document.getElementById(\"btn-story\");\n    const instructions = document.getElementById(\"btn-instructions\");\n    const illustration = document.getElementById(\"btn-illustration\");\n    const startGame = document.getElementById(\"btn-start\");\n    const credits = document.getElementById(\"btn-credits\");\n    const reset = document.getElementById(\"btn-reset\");\n    this.elements.push(\n      new Button(story, btnX, 150, \"story\", this, 128, 64),\n      new Button(instructions, btnX, 250, \"instructions\", this, 128, 64),\n      new Button(illustration, btnX, 350, \"illustration\", this, 128, 64),\n      new Button(startGame, btnX, 450, \"start\", this, 128, 64),\n      new Button(credits, btnX, 550, \"credits\", this, 128, 64)\n      // new Button(reset, btnX, 575, \"reset\", this, 128, 64)\n    );\n  }\n\n  drawSelectInstructions(ctx) {\n    ctx.font = \"25px VT323\";\n    ctx.fillStyle = \"white\";\n    ctx.textAlign = \"left\";\n    ctx.fillText(\"Shoot to select your starting cards\", 200, 600);\n  }\n\n  selectCards() {\n    this.elements = [this.player];\n    this.gameState = 1;\n    this.initializeStartingCards();\n    new InputHandler(this.player);\n  }\n\n  initializeStartingCards() {\n    this.startingChoices = [\n      new InstallUpdate(this),\n      new Overcharge(this),\n      new SyphonEnergy(this),\n      new TuneUp(this),\n      new Salvo(this),\n      new StartGame(this),\n    ];\n  }\n\n  drawStartingCards(ctx) {\n    this.startingChoices.forEach((card, i) => {\n      if (i !== this.startingChoices.length - 1) {\n        card.draw(ctx, 1200, card.y, 40, 60);\n        card.checkPos(ctx);\n      } else {\n        card.draw(ctx, 1155, card.y, 128, 64);\n        card.checkPos(ctx);\n      }\n    });\n  }\n\n  // drawStartingCards(ctx) {\n  //   ctx.drawImage(this.background, 0, 0, 1600, 800);\n  //   this.startingChoices.forEach((card, i) => {\n  //     card.draw(ctx, 1200, card.y, 40, 60);\n  //   });\n  //   this.elements.forEach((element) => element.draw(ctx));\n  //   this.projectiles.forEach((element) => element.draw(ctx));\n  // }\n\n  manageIntro(startingCards) {\n    // this.player = new Player(this);\n    this.elements = [this.player];\n\n    this.gameState = 2;\n    // setTimeout(() => {\n    //   this.gameState = 3;\n    // }, 3000);\n    // setTimeout(() => {\n    //   this.gameState = 4;\n    // }, 10000);\n    setTimeout(() => {\n      this.start(startingCards);\n    }, 1000);\n  }\n\n  writeIntroText1(ctx) {\n    ctx.font = \"25px VT323\";\n    ctx.fillStyle = \"white\";\n    ctx.textAlign = \"center\";\n    ctx.fillText(\n      \"Space Dad heads back to Earth after a long day on Mars...\",\n      500,\n      500\n    );\n    ctx.fillText(\"Suddenly, Alien vessels appear blocking his path.\", 500, 550);\n  }\n\n  writeIntroText2(ctx) {\n    ctx.font = \"25px VT323\";\n    ctx.fillStyle = \"white\";\n    ctx.textAlign = \"right\";\n    ctx.fillText(\n      \"*ring ring* 'Honey, I'm going to be late. Yeah. Aliens again.'\",\n      500,\n      200\n    );\n  }\n\n  // boss fight\n  // start(startingCards) {\n  //   this.hasStarted = true;\n  //   this.player = new Player(this);\n\n  //   this.enemy = new Enemy(this);\n  //   this.playerStatus = new PlayerStatus(this);\n\n  //   this.hand = new Hand(this, startingCards);\n\n  //   this.enemyStatus = new EnemyStatus(this);\n\n  //   this.elements = [this.player, this.enemy, new SmallEnemy(this, 1500, 500)];\n  //   this.gameState = 5;\n  // }\n  start(startingCards) {\n    this.hasStarted = true;\n    // this.player = new Player(this);\n\n    this.playerStatus = new PlayerStatus(this);\n\n    this.hand = new Hand(this, startingCards);\n\n    this.enemy = new Enemy(this, 1500, 100);\n\n    this.enemies = [\n      new SmallEnemy(this, 1500, 100),\n      new SmallEnemy(this, 1500, 300),\n      new SmallEnemy(this, 1500, 500),\n    ];\n    // this.enemyStatus = new EnemyStatus(this);\n\n    this.elements = [this.playerStatus, this.player, ...this.enemies];\n    this.gameState = 5;\n    // this.introBossBattle();\n  }\n\n  postBattle() {\n    this.gameState = 6;\n    document.getElementById(\"post-battle-1-div\").classList.remove(\"hidden\");\n    document.getElementById(\"powerup-1\").addEventListener(\"click\", () => {\n      this.player.lasers += 5;\n      document.getElementById(\"post-battle-1-div\").classList.add(\"hidden\");\n      this.introBossBattle();\n    });\n    document.getElementById(\"powerup-2\").addEventListener(\"click\", () => {\n      this.player.maxEnergy += 1;\n      document.getElementById(\"post-battle-1-div\").classList.add(\"hidden\");\n      this.introBossBattle();\n    });\n    document.getElementById(\"powerup-3\").addEventListener(\"click\", () => {\n      this.player.missles += 5;\n      document.getElementById(\"post-battle-1-div\").classList.add(\"hidden\");\n      this.introBossBattle();\n    });\n  }\n\n  introBossBattle() {\n    this.playerTurn = false;\n    this.hand.disabled = true;\n    this.hand.discardHand();\n    this.gameState = 7;\n\n    this.enemies = [this.enemy];\n    this.elements = [this.playerStatus, this.player, ...this.enemies];\n    setTimeout(() => {\n      this.startBossBattle();\n    }, 5000);\n  }\n\n  startBossBattle() {\n    this.hand.startTurn();\n  }\n\n  computerTurn() {\n    if (!this.playerTurn) {\n      this.enemies.forEach((enemy, i) => {\n        setTimeout(() => {\n          enemy.action();\n        }, (i + 1) * 1000);\n      });\n      // this.enemy.action();\n    }\n\n    setTimeout(() => {\n      this.hand.startTurn();\n    }, this.enemies.length * 1000 + 1000);\n  }\n\n  update(dt) {\n    this.startingChoices.forEach((card) => card.update(dt));\n\n    this.elements.forEach((element) => element.update(dt));\n    this.projectiles.forEach((element) => element.update(dt));\n  }\n\n  isOver() {\n    if (!this.gameover) {\n      return false;\n    } else {\n      return true;\n    }\n    // if (this.hasStarted) {\n    //   // if (this.enemy.armor <= 0) {\n    //   //   document.getElementById(\"enemy-display-span\").innerText =\n    //   //     \"ENEMY DESTROYED! YOU WIN!\";\n    //   //   this.hand.disabled = true;\n    //   //   return true;\n    //   // } else if (this.player.armor <= 0) {\n    //   if (this.player.armor <= 0) {\n    //     document.getElementById(\"enemy-display-span\").innerText =\n    //       \"ABANDON SHIP! YOU HAVE LOST THE BATTLE!\";\n    //     this.hand.disabled = true;\n    //     return true;\n    //   }\n    //   return false;\n    // }\n  }\n\n  endScreen() {\n    this.gameState = 8;\n    const linkedIn = document.getElementById(\"img_linkedIn\");\n    const angelList = document.getElementById(\"img_angelList\");\n    const github = document.getElementById(\"img_github\");\n\n    this.elements.push(\n      new Button(linkedIn, 1000, 100, \"linked in\", this, 128, 128),\n      new Button(angelList, 1000, 300, \"angel list\", this, 128, 128),\n      new Button(github, 1000, 500, \"github\", this, 128, 128)\n    );\n  }\n\n  draw(ctx) {\n    ctx.drawImage(this.background, 0, 0, 1600, 900);\n    ctx.drawImage(this.topDash, 0, 0, 1600, 200);\n    ctx.drawImage(this.bottomDash, 0, this.gameHeight - 333, 1600, 340);\n    // ctx.drawImage(this.topScreen, 200, 0, 300, 100);\n    // ctx.drawImage(this.topScreen, 1100, 0, 300, 100);\n    // // card terminal\n    // ctx.drawImage(this.energyScreen, 300, 715, 1000, 165);\n    // ctx.drawImage(this.energyScreen, 675, 10, 250, 80);\n    switch (this.gameState) {\n      case 0: // start screen\n        this.drawSelectScreenWords(ctx);\n        this.elements.forEach((element) => element.draw(ctx));\n        this.projectiles.forEach((element) => element.draw(ctx));\n        break;\n      case 1: // select Power Cards screen\n        this.drawSelectInstructions(ctx);\n        this.drawStartingCards(ctx);\n        this.elements.forEach((element) => element.draw(ctx));\n        this.projectiles.forEach((element) => element.draw(ctx));\n        break;\n      case 2: // intro pause\n        this.elements.forEach((element) => element.draw(ctx));\n        break;\n      case 3: // intro words 1\n        this.elements.forEach((element) => element.draw(ctx));\n        this.writeIntroText1(ctx);\n        break;\n      case 4: // intro words 2\n        this.elements.forEach((element) => element.draw(ctx));\n        this.writeIntroText2(ctx);\n        break;\n      case 5: // battle 1\n        this.elements.forEach((element) => element.draw(ctx));\n        this.projectiles.forEach((element) => element.draw(ctx));\n        if (this.enemies.length === 0) this.postBattle();\n        break;\n      case 6:\n        this.elements.forEach((element) => element.draw(ctx));\n        this.projectiles.forEach((element) => element.draw(ctx));\n        break;\n      case 7: // boss battle\n        this.elements.forEach((element) => element.draw(ctx));\n        this.projectiles.forEach((element) => element.draw(ctx));\n        break;\n      case 8:\n        ctx.fillStyle = \"yellow\";\n        ctx.fillText(\"VICTORY!!!\", 200, 200);\n        ctx.fillRect(1000, 300, 128, 128);\n        ctx.fillRect(1000, 500, 128, 128);\n\n        this.elements.forEach((element) => element.draw(ctx));\n        this.projectiles.forEach((element) => element.draw(ctx));\n        break;\n\n      default:\n        break;\n    }\n    // ctx.drawImage(this.topDash, 0, 0, 1600, 200);\n    // ctx.drawImage(this.bottomDash, 0, this.gameHeight - 340, 1600, 340);\n  }\n}\n","import Game from \"./game\";\nimport \"./styles/index.scss\";\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//   const p = document.createElement(\"p\");\n//   p.innerText = \"hellooooooo\";\n//   document.body.append(p);\n//   debugger;\n// });\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  document.getElementById(\"rules-pic-box\").addEventListener(\"click\", () => {\n    document.getElementById(\"rules-pic-box\").classList.add(\"hidden\");\n  });\n\n  // Array.from(document.getElementsByClassName(\"card-button\")).forEach(\n  //   (button, i) => {\n  //     button.addEventListener(\"click\", () => {\n  //       debugger;\n  //       let card = document.getElementById(`nc-${i}`);\n  //       if (card.childNodes.length === 1) {\n  //         debugger;\n  //         if (this.game.playerTurn && card.check() && this.disabled === false) {\n  //           this.disabled = true;\n  //           setTimeout(() => {\n  //             this.disabled = false;\n  //           }, 2500);\n  //           card.action();\n  //           this.discardPile.push(card);\n  //           document.getElementById(`card-${i}`).classList.add(\"playCard\");\n\n  //           setTimeout(() => {\n  //             document.getElementById(`card-${i}`).remove();\n  //           }, 1450);\n  //         }\n  //       }\n  //     });\n  //   }\n  // );\n\n  const GAME_WIDTH = 1600;\n  const GAME_HEIGHT = 900;\n  let game = new Game(GAME_WIDTH, GAME_HEIGHT);\n  game.pregame();\n\n  const startingCards = [];\n\n  let canvas = document.getElementById(\"game-screen\");\n  let ctx = canvas.getContext(\"2d\");\n  let lastTime = 0;\n  let frames = 0;\n\n  const endTurn = document.getElementById(\"end-turn-button\");\n\n  endTurn.addEventListener(\"click\", () => {\n    if (!game.hand.disabled && game.playerTurn) game.hand.endTurn();\n    // if (game.playerTurn) game.hand.endTurn();\n    // if (!game.hand.disabled) game.hand.endTurn();\n  });\n\n  function gameLoop(timestamp) {\n    let dt = timestamp - lastTime;\n    lastTime = timestamp;\n\n    game.update(dt);\n    game.draw(ctx);\n\n    if (!game.isOver()) {\n      requestAnimationFrame(gameLoop);\n    }\n    // game.isOver();\n  }\n\n  requestAnimationFrame(gameLoop);\n});\n"],"sourceRoot":""}