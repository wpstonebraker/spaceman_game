{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/explosion.js","webpack:///./src/cards/card.js","webpack:///./src/cards/dud.js","webpack:///./src/util/animation.js","webpack:///./src/player/shields.js","webpack:///./src/enemy/enemyProjectile.js","webpack:///./src/enemy/enemyShields.js","webpack:///./src/enemy/enemy.js","webpack:///./src/cards/installUpdate.js","webpack:///./src/player/projectile.js","webpack:///./src/cards/laserAtk.js","webpack:///./src/cards/missleAtk.js","webpack:///./src/cards/overcharge.js","webpack:///./src/player/newShields.js","webpack:///./src/cards/recharge.js","webpack:///./src/cards/syphonEnergy.js","webpack:///./src/cards/salvo.js","webpack:///./src/cards/tuneUp.js","webpack:///./src/hand.js","webpack:///./src/player/energy.js","webpack:///./src/player/fire.js","webpack:///./src/player/player.js","webpack:///./src/player/player_status.js","webpack:///./src/player/Input.js","webpack:///./src/cards/startGame.js","webpack:///./src/buttons/button.js","webpack:///./src/enemy/smallEnemy.js","webpack:///./src/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Explosion","x","y","game","this","image","document","getElementById","position","width","height","loop","loopIndex","frames","fX","fY","ctx","drawImage","drawFrame","idx","elements","indexOf","splice","dt","Card","energy","player","cost","innerText","playerPosY","ssY","font","fillStyle","textAlign","fillText","description","cardImg","ssX","ssWidth","ssHeight","checkPos","card","startingCards","push","laser","laserRight","laserY","topLeft","bottomLeft","cardIdx","findCardIdx","findCard","removeAndAddCard","laserIdx","projectiles","length","forEach","projectile","collision","Dud","pop","hand","deck","Animation","loops","fps","Shields","EnemyProjectile","sprite","speed","atkType","velocity","shields","receiveDamage","EnemyShields","size","target","Enemy","laserSprite","missleSprite","dudSprite","shieldCharge","armor","lasers","missles","receiveAttackTop","receiveAttackBottom","receiveAttackX","special","destroyed","nextAction","renderStats","renderTarget","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","fillRect","setTimeout","endScreen","endGame","attackLasers","attackMissles","heal","rechargeShields","dudCards","Math","random","classList","remove","enemy","angle","atan2","cos","sin","dmg","type","sign","InstallUpdate","maxEnergy","Projectile","self","enemies","renderShields","renderExplosion","gameWidth","LaserAttack","lastTime","laserPos","MissleAttack","misslePos","Overcharge","power","NewShields","Recharge","SyphonEnergy","syphonEnergy","Salvo","TuneUp","Hand","STARTING_CARDS","slice","cardPile","playerCards","currentHand","discardPile","disabled","initializeDeck","startTurn","playCard","extra","rando","playerTurn","initializeEnergy","resetDeck","shift","render","check","action","add","Array","from","getElementsByClassName","discardHand","computerTurn","innerHTML","createElement","src","id","appendChild","addEventListener","Energy","Fire","Player","poweredUp","gameHeight","receiveAttack","speedX","speedY","maxSpeedX","maxSpeedY","disableLaser","lossScreen","PlayerStatus","ball","draw","renderEnergy","InputHandler","e","moveUp","moveDown","moveLeft","moveRight","preventDefault","fire","stopY","stopX","StartGame","initIntro","Button","btns","btn","hideAll","initSelectCards","window","open","SmallEnemy","targetImage","postBattle","Game","background","startingChoices","gameState","texts","hasStarted","gameover","isOver","playerStatus","topDash","bottomDash","topScreen","energyScreen","drawSelectScreenWords","initializeStartScreenButtons","story","instructions","illustration","startGame","credits","drawSelectInstructions","initializeStartingCards","initBattle1","introBossBattle","startBossBattle","linkedIn","angelList","github","lossScreenText","endScreenText","element","update","text","init","getContext","endTurn","requestAnimationFrame","gameLoop","timestamp"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export default class Explosion {\n  constructor(x, y, game) {\n    this.image = document.getElementById(\"img_explosion\");\n    this.position = {\n      x,\n      y,\n    };\n    this.width = 96;\n    this.height = 96;\n    this.loop = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n    this.loopIndex = 0;\n    this.frames = 0;\n    this.game = game;\n  }\n\n  drawFrame(fX, fY, ctx) {\n    ctx.drawImage(\n      this.image,\n      fX * this.width,\n      fY * this.height,\n      this.width,\n      this.height,\n      this.position.x - 50,\n      this.position.y - 50,\n      100,\n      100\n    );\n  }\n\n  draw(ctx) {\n    if (this.frames > 1) {\n      this.loopIndex++;\n      this.frames = 0;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    } else {\n      this.drawFrame(this.loopIndex, 0, ctx);\n      this.frames++;\n    }\n\n    if (this.loopIndex > 11) {\n      const idx = this.game.elements.indexOf(this);\n      this.game.elements.splice(idx, 1);\n    }\n\n    // this.drawFrame(3, 0, this.position.x, this.position.y, ctx);\n    // this.drawFrame(4, 0, this.position.x, this.position.y, ctx);\n  }\n\n  update(dt) {}\n}\n","import Explosion from \"../util/explosion\";\n\nexport default class Card {\n  constructor(game, position) {\n    this.height = 200;\n    this.width = 100;\n    this.game = game;\n    this.energy;\n  }\n\n  check() {\n    if (this.game.player.energy - this.cost < 0) {\n      document.getElementById(\"card-description-span\").innerText =\n        \"Not enough energy\";\n      return false;\n    }\n\n    return true;\n  }\n\n  checkPos(ctx) {\n    let playerPosY = this.game.player.position.y + 100;\n    if (playerPosY >= this.ssY && playerPosY <= this.ssY + 60) {\n      ctx.font = \"25px VT323\";\n      ctx.fillStyle = \"white\";\n      ctx.textAlign = \"right\";\n      ctx.fillText(this.description, 1150, this.ssY + 35);\n    }\n  }\n\n  // draw the select screen icon, hence the \"ss\"\n  draw(ctx) {\n    ctx.drawImage(\n      this.cardImg,\n      this.ssX,\n      this.ssY,\n      this.ssWidth,\n      this.ssHeight\n    );\n    this.checkPos(ctx);\n  }\n\n  findCardIdx() {\n    return this.game.elements.indexOf(this);\n  }\n\n  findCard(idx) {\n    return this.game.elements[idx];\n  }\n\n  removeAndAddCard(idx, card) {\n    this.game.elements.splice(idx, 1);\n    this.game.startingCards.push(card);\n  }\n\n  collision(laser, card) {\n    let laserRight = laser.position.x + laser.width;\n    let laserY = laser.position.y;\n    let topLeft = card.ssY;\n    let bottomLeft = card.ssY + 60;\n    let cardX = 1200;\n\n    if (laserRight >= cardX && laserY >= topLeft && laserY <= bottomLeft) {\n      const cardIdx = this.findCardIdx();\n      const card = this.findCard(cardIdx);\n      this.removeAndAddCard(cardIdx, card);\n      const laserIdx = this.game.projectiles.indexOf(laser);\n      this.game.projectiles.splice(laserIdx, 1);\n      this.game.elements.push(\n        new Explosion(laser.position.x, laser.position.y, this.game)\n      );\n    }\n  }\n\n  update(dt) {\n    if (this.game.projectiles.length >= 1) {\n      this.game.projectiles.forEach((projectile) => {\n        this.collision(projectile, this);\n      });\n    }\n  }\n}\n","import Card from \"./card\";\n\nexport default class Dud extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 1;\n    this.image = \"assets/dud.png\";\n    this.description =\n      \"Malware. Not fatal, but annoying. Playing this card removes it from your deck\";\n  }\n\n  action() {\n    this.game.player.energy.pop();\n    const idx = this.game.hand.deck.indexOf(this);\n    this.game.hand.deck.splice(idx, idx + 1);\n  }\n}\n","export default class Animation {\n  constructor(image, x, y, width, height, loops, fps, game) {\n    this.image = image;\n    this.position = {\n      x,\n      y,\n    };\n    this.width = width;\n    this.height = height;\n    this.loopIndex = 0;\n    this.frames = 0;\n    this.game = game;\n    this.loops = loops;\n    this.fps = fps;\n  }\n\n  drawFrame(fX, fY, ctx) {\n    ctx.drawImage(\n      this.image,\n      fX * this.width,\n      fY * this.height,\n      this.width,\n      this.height,\n      this.game.player.position.x + this.position.x,\n      this.game.player.position.y + this.position.y,\n      100,\n      100\n    );\n  }\n\n  draw(ctx) {\n    if (this.frames > this.fps) {\n      this.loopIndex++;\n      this.frames = 0;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    } else {\n      this.drawFrame(this.loopIndex, 0, ctx);\n      this.frames++;\n    }\n\n    // if (this.loopIndex > this.loops) {\n    //   this.game.elements.pop();\n    // }\n\n    // this.drawFrame(3, 0, this.position.x, this.position.y, ctx);\n    // this.drawFrame(4, 0, this.position.x, this.position.y, ctx);\n  }\n\n  update(dt) {}\n}\n","export default class Shields {\n  constructor(x, y, game) {\n    this.image = document.getElementById(\"img_shields\");\n    this.position = {\n      x,\n      y,\n    };\n    this.width = 256;\n    this.height = 256;\n    this.loopIndex = 0;\n    this.frames = 0;\n    this.game = game;\n  }\n\n  // give it the image\n  // fX (nth frame x cord starts here (top left))\n  // fX (nth frame y cord starts here (top left))\n  drawFrame(fX, fY, ctx) {\n    ctx.drawImage(\n      this.image,\n      fX * this.width,\n      fY * this.height,\n      this.width,\n      this.height,\n      this.game.player.position.x - 5,\n      this.game.player.position.y + 10,\n      150,\n      150\n    );\n  }\n\n  draw(ctx) {\n    if (this.frames > 1) {\n      this.loopIndex += 1;\n      this.frames = 0;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    } else {\n      this.drawFrame(this.loopIndex, 0, ctx);\n      this.frames += 1;\n    }\n\n    if (this.loopIndex > 11) {\n      this.game.elements.pop();\n    }\n\n    // this.drawFrame(3, 0, this.position.x, this.position.y, ctx);\n    // this.drawFrame(4, 0, this.position.x, this.position.y, ctx);\n  }\n\n  update(dt) {}\n}\n","import Shields from \"../player/shields\";\nimport Explosion from \"../util/explosion\";\n\nexport default class EnemyProjectile {\n  constructor(x, y, sprite, width, height, speed, game, atkType, velocity) {\n    this.position = {\n      x: x,\n      y: y,\n    };\n    this.speed = speed;\n    this.sprite = sprite;\n    this.width = width;\n    this.height = height;\n    this.game = game;\n    this.atkType = atkType;\n    this.velocity = velocity;\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      this.sprite,\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n\n    if (\n      this.game.player.shields > 0 &&\n      this.position.x < this.game.player.position.x + 100\n    ) {\n      this.game.projectiles.pop();\n      this.game.elements.push(\n        new Shields(this.position.x, this.position.y, this.game)\n      );\n      this.game.player.receiveDamage(this.atkType);\n    } else if (this.position.x < this.game.player.position.x + 100) {\n      this.game.projectiles.pop();\n      this.game.elements.push(\n        new Explosion(this.position.x, this.position.y, this.game)\n      );\n      this.game.player.receiveDamage(this.atkType);\n    }\n  }\n\n  update(dt) {\n    this.position.x -= this.velocity.x * 30;\n    this.position.y -= this.velocity.y * 30;\n  }\n}\n","export default class EnemyShields {\n  constructor(x, y, size, game) {\n    this.image = document.getElementById(\"img_npc1shields\");\n    this.position = {\n      x: x,\n      y: y,\n    };\n    this.width = 256;\n    this.height = 256;\n    this.loop = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n    this.loopIndex = 0;\n    this.frames = 0;\n    this.game = game;\n    this.size = size;\n  }\n\n  // give it the image\n  // fX (nth frame x cord starts here (top left))\n  // fX (nth frame y cord starts here (top left))\n  drawFrame(fX, fY, ctx) {\n    ctx.drawImage(\n      this.image,\n      fX * this.width,\n      fY * this.height,\n      this.width,\n      this.height,\n      this.game.target.position.x,\n      this.game.target.position.y,\n      this.size,\n      this.size\n    );\n  }\n\n  draw(ctx) {\n    if (this.frames > 1) {\n      this.loopIndex += 1;\n      this.frames = 0;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    } else {\n      this.frames++;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    }\n\n    if (this.loopIndex > 11) {\n      this.game.elements.pop();\n    }\n\n    // this.drawFrame(3, 0, this.position.x, this.position.y, ctx);\n    // this.drawFrame(4, 0, this.position.x, this.position.y, ctx);\n  }\n\n  update(dt) {}\n}\n","import Dud from \"../cards/dud\";\nimport Animation from \"../util/animation\";\nimport Explosion from \"../util/explosion\";\nimport EnemyProjectile from \"./enemyProjectile\";\nimport EnemyShields from \"./enemyShields\";\n\nexport default class Enemy {\n  constructor(game, x, y) {\n    this.image = document.getElementById(\"img_npc1\");\n    this.position = {\n      x: x,\n      y: y,\n    };\n\n    this.laserSprite = document.getElementById(\"img_npc1a1\");\n    this.missleSprite = document.getElementById(\"img_npc1a2\");\n    this.dudSprite = document.getElementById(\"img_malwareAni\");\n\n    this.speed = 0.2;\n\n    this.game = game;\n\n    this.width = 256;\n    this.height = 256;\n    this.shields = 50;\n    this.shieldCharge = 2;\n    this.armor = 100;\n    this.lasers = 20;\n    this.missles = 20;\n    this.receiveAttackTop = this.position.y;\n    this.receiveAttackBottom = this.position.y + this.height;\n    this.receiveAttackX = 1150;\n    this.special = 1;\n    this.destroyed = false;\n    this.name = \"Big Boss\";\n    this.nextAction = \"Laser Attack\";\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      this.image,\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n    let playerPosY = this.game.player.position.y + 100;\n    if (\n      playerPosY >= this.position.y &&\n      playerPosY <= this.position.y + this.height\n    ) {\n      this.renderStats(ctx);\n      this.renderTarget(ctx);\n    }\n  }\n\n  renderTarget(ctx) {\n    ctx.fillStyle = \"hsla(0, 100%, 50%, 1)\";\n    ctx.textAlign = \"center\";\n    ctx.fillText(this.name, 1250, 30);\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Next Turn:\", 1250, 60);\n\n    ctx.fillText(this.nextAction, 1250, 90);\n  }\n\n  renderStats(ctx) {\n    ctx.beginPath();\n    ctx.moveTo(this.position.x + 180, this.position.y + 190);\n    ctx.lineTo(1400, 400);\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = \"hsla(0, 100%, 50%, 0.25)\";\n    ctx.stroke();\n    ctx.fillStyle = \"hsla(0, 100%, 50%, 0.25)\";\n    ctx.fillRect(1400, 400, 130, 100);\n    ctx.fillStyle = \"white\";\n    ctx.fillText(`Shields: ${this.shields}`, 1405, 420);\n    ctx.fillText(`Armor: ${this.armor}`, 1405, 440);\n    ctx.fillText(`Lasers: ${this.lasers}`, 1405, 460);\n    ctx.fillText(`Missles: ${this.missles}`, 1405, 480);\n    // ctx.fillStyle = \"white\";\n    // ctx.fillText(this.name, 970, 20);\n    // ctx.fillText(\n    //   `Shields: ${this.shields}     Lasers: ${this.lasers}`,\n    //   1120,\n    //   55\n    // );\n    // ctx.fillText(`Armor: ${this.armor}      Missle: ${this.missles}`, 1120, 80);\n  }\n\n  update(dt) {\n    if (this.destroyed) {\n      this.position.x += 5;\n      setTimeout(() => {\n        this.game.endScreen();\n        this.game.hand.endGame();\n      }, 2500);\n    }\n    if (this.position.x > 1100) this.position.x -= 1;\n    if (this.position.y < 220) {\n      this.position.y += this.speed;\n    } else {\n      this.speed = -this.speed;\n      this.position.y += this.speed;\n    }\n    if (this.position.y > 180) {\n      this.position.y += this.speed;\n    } else {\n      this.speed = -this.speed;\n      this.position.y += this.speed;\n    }\n    // if (this.position.y > 100 && this.position.y < 130) {\n    //   this.position.y -= this.speed;\n    // } else {\n    //   this.position.y -= this.speed;\n    // }\n  }\n\n  action() {\n    switch (this.nextAction) {\n      case \"Laser Attack\":\n        this.attackLasers();\n        break;\n      case \"Missle Attack\":\n        this.attackMissles();\n        break;\n      case \"Recharge Shield\":\n        this.heal();\n        break;\n      case \"Replenish Shield Charges\":\n        this.rechargeShields();\n        break;\n      case \"Upload Malware\":\n        this.dudCards();\n        break;\n      default:\n        break;\n    }\n    const rand = Math.random();\n\n    // if (rand < 1) {\n    if (rand < 0.33) {\n      this.nextAction = \"Upload Malware\";\n      // setTimeout(() => {\n      //   this.game.hand.startTurn();\n      // }, 2500);\n      return;\n    }\n\n    if (this.shields === 0 && this.shieldCharge > 0) {\n      this.nextAction = \"Recharge Shield\";\n    } else if (this.shieldCharge === 0) {\n      this.nextAction = \"Replenish Shield Charges\";\n    } else if (this.game.player.shields > 0) {\n      this.nextAction = \"Laser Attack\";\n    } else {\n      this.nextAction = \"Missle Attack\";\n    }\n\n    // setTimeout(() => {\n    //   this.game.hand.startTurn();\n    // }, 2500);\n  }\n\n  dudCards() {\n    this.game.hand.deck.push(new Dud(this.game));\n    this.game.hand.deck.push(new Dud(this.game));\n    this.game.hand.deck.push(new Dud(this.game));\n    this.game.elements.push(\n      new Animation(this.dudSprite, 50, 0, 64, 64, 12, 6, this.game)\n    );\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n\n    document.getElementById(\"card-description-span\").innerText =\n      \"3 Malware cards uploaded to player's deck.\";\n  }\n\n  rechargeShields() {\n    this.shieldCharge = 2;\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n\n    document.getElementById(\"card-description-span\").innerText =\n      \"Recharging shield core...\";\n  }\n\n  heal() {\n    this.shieldCharge--;\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n\n    document.getElementById(\"card-description-span\").innerText =\n      \"Enemy boosts shields by 20\";\n    this.shields += 20;\n    this.game.target = this;\n    this.game.elements.push(\n      new EnemyShields(\n        this.game.enemy.position.x - 50,\n        this.game.enemy.position.y - 50,\n        256,\n        this.game\n      )\n    );\n    // this.game.enemyStatus.render();\n  }\n\n  attackLasers() {\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n\n    document.getElementById(\n      \"card-description-span\"\n    ).innerText = `Enemy attacks for ${this.lasers} laser damage`;\n    // setTimeout(() => {\n    //   document.getElementById(\"enemy-display-span\").innerText = \"\";\n    // }, 3000);\n    const angle = Math.atan2(\n      this.position.y + 180 - (this.game.player.position.y + 100),\n      this.position.x - (this.game.player.position.x + 50)\n    );\n    const velocity = {\n      x: Math.cos(angle),\n      y: Math.sin(angle),\n    };\n    this.game.projectiles.push(\n      new EnemyProjectile(\n        this.position.x,\n        this.position.y + 180,\n        this.laserSprite,\n        32,\n        16,\n        -15,\n        this.game,\n        \"laser\",\n        velocity\n      )\n    );\n  }\n\n  attackMissles() {\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n\n    document.getElementById(\n      \"card-description-span\"\n    ).innerText = `Enemy attacks for ${this.missles} projectile damage`;\n    const angle = Math.atan2(\n      this.position.y + 80 - (this.game.player.position.y + 100),\n      this.position.x - (this.game.player.position.x + 50)\n    );\n    const velocity = {\n      x: Math.cos(angle),\n      y: Math.sin(angle),\n    };\n    this.game.projectiles.push(\n      new EnemyProjectile(\n        this.position.x,\n        this.position.y + 80,\n        this.missleSprite,\n        50,\n        50,\n        -10,\n        this.game,\n        \"missle\",\n        velocity\n      )\n    );\n  }\n\n  special() {}\n\n  receiveDamage(atkType) {\n    let dmg;\n    let type;\n    switch (atkType) {\n      case \"laser\":\n        if (this.shields >= this.game.player.lasers) {\n          dmg = this.game.player.lasers;\n          type = \"shields\";\n          this.shields -= dmg;\n        } else if (this.shields === 0) {\n          dmg = this.game.player.lasers / 2;\n          this.armor -= dmg;\n          type = \"armor\";\n        } else if (this.shields - this.game.player.lasers < 0) {\n          dmg = -(this.shields - this.game.player.lasers) / 2;\n          this.armor -= dmg;\n          this.shields = 0;\n          type = \"armor\";\n        }\n        break;\n      case \"overcharge\":\n        if (this.shields >= this.game.player.lasers + 20) {\n          dmg = this.game.player.lasers + 20;\n          this.shields -= dmg;\n          type = \"shields\";\n        } else if (this.shields === 0) {\n          dmg = (this.game.player.lasers + 20) / 2;\n          this.armor -= dmg;\n          type = \"armor\";\n        } else if (this.shields - (this.game.player.lasers + 20) < 0) {\n          dmg = -(this.shields - (this.game.player.lasers + 20)) / 2;\n          this.armor -= dmg;\n          this.shields = 0;\n          type = \"armor\";\n        }\n        break;\n      case \"missle\":\n        if (this.shields > this.game.player.missles / 2) {\n          dmg = this.game.player.missles / 2;\n          this.shields -= dmg;\n          type = \"shields\";\n        } else if (this.shields === 0) {\n          dmg = this.game.player.missles;\n          this.armor -= dmg;\n          Math.sign(this.armor) === -1 ? (this.armor = 0) : this.armor;\n          type = \"armor\";\n        } else if (\n          this.shields !== 0 &&\n          this.shields <= this.game.player.missles\n        ) {\n          dmg = this.shields;\n          this.shields = 0;\n          type = \"armor\";\n        }\n\n      default:\n        break;\n    }\n\n    if (this.armor <= 0) this.destroyed = true;\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n    document.getElementById(\n      \"card-description-span\"\n    ).innerText = `Enemy's ${type} receives ${dmg} damage!`;\n\n    // this.game.enemyStatus.render();\n  }\n\n  renderShields() {\n    this.game.elements.push(\n      new EnemyShields(this.position.x, this.position.y, 256, this.game)\n    );\n  }\n\n  renderExplosion(x, y) {\n    this.game.elements.push(new Explosion(x, y, this.game));\n  }\n}\n","import Animation from \"../util/animation\";\nimport Card from \"./card\";\n\nexport default class InstallUpdate extends Card {\n  constructor(game) {\n    super(game);\n    this.game;\n    this.cost = 3;\n    this.image = \"assets/installUpdateCard.png\";\n    this.cardImg = document.getElementById(\"img_updateCard\");\n    this.sprite = document.getElementById(\"img_updateAni\");\n    this.description =\n      \"Install the latest AI update, max energy + 1. Requires restart to take effect.\";\n    this.ssX = 1200;\n    this.ssY = 160;\n    this.ssWidth = 40;\n    this.ssHeight = 60;\n  }\n\n  action() {\n    this.game.player.maxEnergy++;\n    this.game.player.energy.pop();\n    this.game.player.energy.pop();\n    this.game.player.energy.pop();\n    this.game.elements.push(\n      new Animation(this.sprite, 50, 0, 64, 64, 12, 20, this.game)\n    );\n    const idx = this.game.hand.deck.indexOf(this);\n    this.game.hand.deck.splice(idx, idx + 1);\n    // setTimeout(() => {\n    //   this.game.hand.endTurn();\n    // }, 1500);\n  }\n}\n","import EnemyShields from \"../enemy/enemyShields\";\nimport Explosion from \"../util/explosion\";\n\nexport default class Projectile {\n  constructor(x, y, sprite, width, height, speed, game, atkType) {\n    this.position = {\n      x: x + game.player.position.x,\n      y: y + game.player.position.y,\n    };\n    this.speed = speed;\n    this.sprite = sprite;\n    this.width = width;\n    this.height = height;\n    this.game = game;\n    this.atkType = atkType;\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      this.sprite,\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n\n    const self = this;\n\n    this.game.enemies.forEach((enemy) => {\n      if (\n        enemy.shields > 0 &&\n        self.position.x > enemy.receiveAttackX &&\n        self.position.y >= enemy.receiveAttackTop &&\n        self.position.y <= enemy.receiveAttackBottom\n      ) {\n        self.game.target = enemy;\n        // self.game.enemyStatus.render();\n        const idx = self.game.projectiles.indexOf(self);\n        self.game.projectiles.splice(idx, 1);\n        enemy.renderShields();\n        self.game.target.receiveDamage(self.atkType);\n      } else if (\n        self.position.x > enemy.receiveAttackX &&\n        self.position.y >= enemy.receiveAttackTop &&\n        self.position.y <= enemy.receiveAttackBottom\n      ) {\n        self.game.target = enemy;\n        // self.game.enemyStatus.render();\n        const idx = self.game.projectiles.indexOf(self);\n        self.game.projectiles.splice(idx, 1);\n        enemy.renderExplosion(self.position.x, self.position.y);\n        self.game.target.receiveDamage(self.atkType);\n      } else if (self.position.x > self.game.gameWidth) {\n        const idx = self.game.projectiles.indexOf(self);\n        self.game.projectiles.splice(idx, 1);\n      }\n      // } else if (this.position.x > this.game.enemy.receiveAttack) {\n      //   this.game.enemyStatus.render();\n      //   this.game.projectiles.shift();\n      //   this.game.elements.push(\n      //     new Explosion(this.position.x, this.position.y, this.game)\n      //   );\n      // this.game.enemy.receiveDamage(this.atkType);\n      // }\n    });\n  }\n\n  update(dt) {\n    this.position.x += this.speed;\n  }\n}\n","import Card from \"./card\";\nimport Projectile from \"../player/projectile\";\n\nexport default class LaserAttack extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 1;\n    this.image = \"assets/laserAtk.png\";\n    this.description = `Fire your lasers. Lasers do full damage vs Shields and half damage vs Armor`;\n\n    this.speed = 5;\n    this.lastTime = 0;\n    this.position = {\n      x: this.game.player.laserPos.x,\n      y: this.game.player.laserPos.y,\n    };\n    this.sprite = document.getElementById(\"img_laser\");\n    this.game = game;\n    this.atkType = \"laser\";\n  }\n\n  action() {\n    // document.addEventListener(\"click\", (e) => {\n    //   if (e.clientX <= )\n    // });\n    this.game.player.energy.pop();\n    this.game.projectiles.push(\n      new Projectile(\n        this.position.x,\n        this.position.y,\n        this.sprite,\n        20,\n        3,\n        20,\n        this.game,\n        this.atkType\n      )\n    );\n  }\n}\n","import Card from \"./card\";\nimport Projectile from \"../player/projectile\";\n\nexport default class MissleAttack extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 1;\n    this.image = \"assets/missleAtk.png\";\n    this.description = `Fire your missles. Missles do full damage vs Armor and half damage vs Shields`;\n    this.position = {\n      x: this.game.player.misslePos.x,\n      y: this.game.player.misslePos.y,\n    };\n    this.sprite = document.getElementById(\"img_missle\");\n    this.game = game;\n    this.atkType = \"missle\";\n  }\n\n  action() {\n    this.game.player.energy.pop();\n    this.game.projectiles.push(\n      new Projectile(\n        this.position.x,\n        this.position.y,\n        this.sprite,\n        20,\n        20,\n        10,\n        this.game,\n        this.atkType\n      )\n    );\n  }\n}\n","import Projectile from \"../player/projectile\";\nimport Card from \"./card\";\n\nexport default class Overcharge extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 1;\n    this.power = 20;\n    this.image = \"assets/overcharge.png\";\n    this.description =\n      \"Sacrifice 20 shield points to boost your lasers by 20 for one attack\";\n    this.position = {\n      x: this.game.player.laserPos.x,\n      y: this.game.player.laserPos.y,\n    };\n    this.ssX = 1200;\n    this.ssY = 240;\n    this.ssWidth = 40;\n    this.ssHeight = 60;\n    this.sprite = document.getElementById(\"img_laser\");\n    this.cardImg = document.getElementById(\"img_overchargeCard\");\n    this.atkType = \"overcharge\";\n    this.type = \"overcharge\";\n  }\n\n  check() {\n    if (this.game.player.energy - this.cost < 0) {\n      document.getElementById(\"card-description-span\").innerText =\n        \"Not enough energy\";\n      return false;\n    }\n\n    if (this.game.player.shields - this.power < 0) {\n      document.getElementById(\"card-description-span\").innerText =\n        \"Need at least 20 shields\";\n      return false;\n    }\n\n    return true;\n  }\n\n  action() {\n    this.game.player.shields -= 20;\n    this.game.player.energy.pop();\n    this.game.projectiles.push(\n      new Projectile(\n        this.position.x,\n        this.position.y,\n        this.sprite,\n        20,\n        6,\n        20,\n        this.game,\n        this.atkType\n      )\n    );\n  }\n}\n","export default class NewShields {\n  constructor(x, y, game) {\n    this.image = document.getElementById(\"img_newshields\");\n    this.position = {\n      x: x,\n      y: y,\n    };\n    this.width = 256;\n    this.height = 256;\n    this.loopIndex = 0;\n    this.frames = 0;\n    this.game = game;\n  }\n\n  // give it the image\n  // fX (nth frame x cord starts here (top left))\n  // fX (nth frame y cord starts here (top left))\n  drawFrame(fX, fY, ctx) {\n    ctx.drawImage(\n      this.image,\n      fX * this.width,\n      fY * this.height,\n      this.width,\n      this.height,\n      this.game.player.position.x - 5,\n      this.game.player.position.y + 10,\n      150,\n      150\n    );\n  }\n\n  draw(ctx) {\n    if (this.frames > 2) {\n      this.loopIndex += 1;\n      this.frames = 0;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    } else {\n      this.drawFrame(this.loopIndex, 0, ctx);\n      this.frames += 1;\n    }\n\n    if (this.loopIndex > 37) {\n      this.game.elements.pop();\n    }\n\n    // this.drawFrame(3, 0, this.position.x, this.position.y, ctx);\n    // this.drawFrame(4, 0, this.position.x, this.position.y, ctx);\n  }\n\n  update(dt) {}\n}\n","import Card from \"./card\";\nimport Shields from \"../player/newShields\";\n\nexport default class Recharge extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 1;\n    this.image = \"assets/recharge.png\";\n    this.power = 10;\n    this.description = `Charge your shields by ${this.power}`;\n    this.game = game;\n  }\n\n  action() {\n    this.game.player.shields += this.power;\n    if (this.game.player.shields > 30) this.game.player.shields = 30;\n    this.game.player.energy.pop();\n    this.game.elements.push(\n      new Shields(\n        this.game.player.position.x,\n        this.game.player.position.y,\n        this.game\n      )\n    );\n  }\n}\n","import Card from \"./card\";\n\nexport default class SyphonEnergy extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 0;\n    this.image = \"assets/syphonEnergy.png\";\n    this.description = \"Double laser damage at cost of -1 max energy\";\n    this.ssX = 1200;\n    this.ssY = 320;\n    this.ssWidth = 40;\n    this.ssHeight = 60;\n    this.cardImg = document.getElementById(\"img_syphonCard\");\n  }\n\n  action() {\n    this.game.player.syphonEnergy();\n    this.game.player.maxEnergy -= 1;\n    this.game.player.lasers *= 2;\n  }\n}\n","import Card from \"./card\";\nimport Projectile from \"../player/projectile\";\n\nexport default class Salvo extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 1;\n    this.image = \"assets/salvo.png\";\n    this.description = `Launch a 3 missle salvo`;\n    this.position = {\n      x: this.game.player.misslePos.x,\n      y: this.game.player.misslePos.y,\n    };\n    this.sprite = document.getElementById(\"img_missle\");\n    this.game = game;\n    this.atkType = \"missle\";\n    this.ssX = 1200;\n    this.ssY = 480;\n    this.ssWidth = 40;\n    this.ssHeight = 60;\n    this.cardImg = document.getElementById(\"img_salvoCard\");\n    this.type = \"salvo\";\n  }\n\n  action() {\n    this.game.player.energy.pop();\n    this.game.projectiles.push(\n      new Projectile(\n        this.position.x,\n        this.position.y,\n        this.sprite,\n        20,\n        20,\n        20,\n        this.game,\n        this.atkType\n      )\n    );\n    setTimeout(() => {\n      this.game.projectiles.push(\n        new Projectile(\n          this.position.x,\n          this.position.y,\n          this.sprite,\n          20,\n          20,\n          20,\n          this.game,\n          this.atkType\n        )\n      );\n    }, 1000);\n    setTimeout(() => {\n      this.game.projectiles.push(\n        new Projectile(\n          this.position.x,\n          this.position.y,\n          this.sprite,\n          20,\n          20,\n          20,\n          this.game,\n          this.atkType\n        )\n      );\n    }, 2000);\n  }\n}\n","import Card from \"./card\";\n\nexport default class TuneUp extends Card {\n  constructor(game) {\n    super(game);\n    this.cost = 2;\n    this.image = \"assets/tuneUp.png\";\n    this.power = 5;\n    this.description = `Calibrate your laser to permanently increase damage by ${this.power}`;\n    this.game = game;\n    this.ssX = 1200;\n    this.ssY = 400;\n    this.ssWidth = 40;\n    this.ssHeight = 60;\n    this.cardImg = document.getElementById(\"img_tuneUpCard\");\n  }\n\n  action() {\n    this.game.player.lasers += this.power;\n    this.game.player.energy.pop();\n  }\n}\n","import Card from \"./cards/card\";\nimport DrainShield from \"./cards/drainShield\";\nimport InstallUpdate from \"./cards/installUpdate\";\nimport LaserAttack from \"./cards/laserAtk\";\nimport MissleAttack from \"./cards/missleAtk\";\nimport Overcharge from \"./cards/overcharge\";\nimport Recharge from \"./cards/recharge\";\nimport SyphonEnergy from \"./cards/syphonEnergy\";\nimport Salvo from \"./cards/salvo\";\nimport TuneUp from \"./cards/tuneUp\";\n\nexport default class Hand {\n  constructor(game, startingCards) {\n    this.game = game;\n    const STARTING_CARDS = [\n      new Recharge(this.game),\n      new Recharge(this.game),\n      new Recharge(this.game),\n\n      new LaserAttack(this.game),\n      new LaserAttack(this.game),\n      new LaserAttack(this.game),\n\n      new MissleAttack(this.game),\n      new MissleAttack(this.game),\n      new MissleAttack(this.game),\n    ];\n    this.deck = STARTING_CARDS.slice();\n    this.cardPile = this.deck.slice();\n    this.playerCards = [];\n    this.currentHand = [];\n    this.discardPile = [];\n    this.disabled = false;\n    this.initializeDeck(startingCards);\n    this.startTurn();\n    this.playCard = this.playCard.bind(this);\n  }\n\n  initializeDeck(startingCards) {\n    startingCards.forEach((card) => {\n      this.deck.push(card);\n    });\n    if (startingCards.length > 1) {\n      // let extra = startingCards.length - 2;\n      let extra = startingCards.length - 1;\n      for (let i = 0; i < extra; i++) {\n        this.deck.push(new MissleAttack(this.game));\n        this.deck.push(new LaserAttack(this.game));\n        this.deck.push(new Recharge(this.game));\n      }\n    }\n  }\n\n  // takes the players complete deck and SHUFFLES it into\n  // playerCards\n  resetDeck() {\n    this.cardPile = this.deck.slice();\n    this.currentHand.forEach((card) => {\n      let idx = this.cardPile.indexOf(card);\n      this.cardPile.splice(idx, 1);\n    });\n    while (this.cardPile.length) {\n      const rando = ~~(Math.random() * this.cardPile.length);\n      this.playerCards.push(...this.cardPile.splice(rando, rando + 1));\n    }\n  }\n\n  //\n  startTurn() {\n    this.game.playerTurn = true;\n    this.disabled = false;\n    this.game.player.initializeEnergy();\n    for (let i = 0; i < 5; i++) {\n      if (!this.playerCards.length) {\n        this.resetDeck();\n        this.discardPile = [];\n      }\n      this.currentHand.push(this.playerCards.shift());\n    }\n    this.render();\n  }\n\n  playCard(card, i) {\n    return () => {\n      if (this.game.playerTurn && card.check() && this.disabled === false) {\n        this.disabled = true;\n        setTimeout(() => {\n          this.disabled = false;\n        }, 2500);\n        card.action();\n        this.discardPile.push(card);\n        document.getElementById(`card-${i}`).classList.add(\"playCard\");\n        let idx = this.currentHand.indexOf(this);\n        this.currentHand.splice(idx, 1);\n\n        setTimeout(() => {\n          document.getElementById(`card-${i}`).remove();\n        }, 1450);\n        // delete this.currentHand[i];\n        // this.render();\n      }\n    };\n  }\n\n  endTurn() {\n    let discards = Array.from(document.getElementsByClassName(\"card\"));\n    // let discards = document.getElementById(\"player-hand\").childNodes;\n    // for (card of discards) {\n    //   card.classList.add(\"discardCard\");\n    // }\n    discards.forEach((card, i) => {\n      card.classList.add(\"discardCard\");\n    });\n\n    // document\n    //   .getElementById(\"cb-0\")\n    //   .removeEventListener(\"click\", this.playcard, true);\n\n    // Array.from(document.getElementsByClassName(\"card-button\")).forEach(\n    //   (button) => {\n    //     debugger;\n    //     button.removeEventListener(\"click\", this.playCard, true);\n    //   }\n    // );\n    // Array.from(document.getElementsByClassName(\"card-button\")).forEach(\n    //   (button) => {\n    //     debugger;\n    //     button.removeEventListener(\"click\", playCard);\n    //   }\n    // );\n\n    // end the players turn\n    this.game.playerTurn = false;\n\n    // discard the players current hand\n    this.discardHand();\n\n    // have the computer play its turn\n    this.game.computerTurn();\n  }\n\n  discardHand() {\n    // take all the cards and put them in the discard pile\n    while (this.currentHand.length) {\n      this.discardPile.push(this.currentHand.pop());\n    }\n    let discards = Array.from(document.getElementsByClassName(\"no-card\"));\n    discards.forEach((card) => {\n      setTimeout(() => {\n        card.innerHTML = \"\";\n      }, 1500);\n    });\n  }\n\n  playerLoss() {\n    this.playerCards = [];\n    this.disabled = true;\n    this.deck = [];\n    this.currentHand = [];\n  }\n\n  endGame() {\n    this.playerCards = [];\n    this.disabled = true;\n    this.deck = [];\n    this.currentHand = [];\n  }\n\n  render() {\n    if (this.currentHand === null) return;\n    // clear the hand before each re render\n    // document.getElementById(\"player-hand\").innerHTML = \"\";\n\n    // iterate through the current hand\n\n    this.currentHand.forEach((card, i) => {\n      // create an img element and set it to the cards image\n      const cardImg = document.createElement(\"img\");\n      cardImg.src = card.image;\n      cardImg.classList.add(\"card\");\n      cardImg.id = `card-${i}`;\n      document.getElementById(`nc-${i}`).appendChild(cardImg);\n\n      // create an li and attach the img to it\n\n      // const listItem = document.createElement(\"li\").appendChild(cardImg);\n      // add a click listener to the li\n      // if its the players turn, and the player has enough energy to play the card\n      // play the card, add the card to the discard pile, delete the card from the hand, and re render\n      cardImg.addEventListener(\"click\", this.playCard(card, i), true);\n      // if a player doesnt have the energy to play the card\n      // display error message in error box\n      // if (this.game.player.energy - card.cost < 0) {\n      //   document.getElementById(\"card-errors\").innerText =\n      //     \"Not enough energy\";\n      //   setInterval(() => {\n      //     document.getElementById(\"card-errors\").innerText = \"\";\n      //   }, 5000);\n      // }\n      // if (this.game.player.energy - card.cost < 0) {\n      //   document.getElementById(\"card-description\").innerText =\n      //     \"Not enough energy\";\n      // }\n      // if a player does\n      cardImg.addEventListener(\"mouseover\", () => {\n        document.getElementById(\"card-description\").classList.remove(\"hidden\");\n        document.getElementById(\n          \"card-description-span\"\n        ).innerText = `${card.description}`;\n      });\n      cardImg.addEventListener(\"mouseout\", () => {\n        document.getElementById(\"card-description\").classList.add(\"hidden\");\n        document.getElementById(\"card-description-span\").innerText = ``;\n      });\n\n      // document.getElementById(\"player-hand\").appendChild(listItem);\n    });\n  }\n}\n","export default class Energy {\n  constructor(x, y) {\n    this.position = {\n      x: x,\n      y: y,\n    };\n    this.width = 32;\n    this.height = 32;\n    this.loopIndex = 0;\n    this.frames = 0;\n    this.image = document.getElementById(\"img_energyBall\");\n  }\n\n  drawFrame(fX, fY, ctx) {\n    ctx.drawImage(\n      this.image,\n      fX * this.width,\n      fY * this.height,\n      this.width,\n      this.height,\n      this.position.x,\n      this.position.y,\n      32,\n      32\n    );\n  }\n\n  draw(ctx) {\n    if (this.frames > 3) {\n      this.loopIndex += 1;\n      this.frames = 0;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    } else {\n      this.drawFrame(this.loopIndex, 0, ctx);\n      this.frames += 1;\n    }\n\n    if (this.loopIndex === 11) {\n      this.loopIndex = 0;\n    }\n\n    // this.drawFrame(3, 0, this.position.x, this.position.y, ctx);\n    // this.drawFrame(4, 0, this.position.x, this.position.y, ctx);\n  }\n}\n","export default class Fire {\n  constructor(game) {\n    this.position = {\n      x: game.player.position.x + game.player.laserPos.x,\n      y: game.player.position.y + game.player.laserPos.y,\n    };\n    this.sprite = document.getElementById(\"img_laser\");\n    this.game = game;\n    this.speed = 10;\n    this.width = 20;\n    this.height = 3;\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      this.sprite,\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n  }\n\n  update(dt) {\n    this.position.x += this.speed;\n\n    if (this.position.x >= this.game.gameWidth) {\n      this.game.projectiles.splice(this.game.projectiles.indexOf(this), 1);\n    }\n  }\n}\n","import Energy from \"./energy\";\nimport Fire from \"./fire\";\n\nexport default class Player {\n  constructor(game) {\n    this.image = document.getElementById(\"img_player\");\n    this.poweredUp = document.getElementById(\"img_poweredUp\");\n    // this.image = document.getElementById(\"img_player\");\n    this.gameHeight = game.gameHeight;\n    this.position = {\n      x: 200,\n      //   y: game.gameHeight / 2 - this.height / 2,\n      y: 200,\n    };\n    this.width = 64;\n    this.height = 64;\n    this.shields = 10;\n    this.armor = 50;\n    this.maxEnergy = 3;\n    this.energy = [];\n    this.lasers = 20;\n    this.missles = 20;\n    this.laserPos = {\n      x: 115,\n      y: 100,\n    };\n    this.misslePos = {\n      x: 90,\n      y: 105,\n    };\n    this.receiveAttack = 305;\n    // this.shieldX = this.position.x;\n    // this.shieldY = this.position.y;\n    // this.speed = 0;\n    this.speedX = 0;\n    this.speedY = 0;\n    this.maxSpeedX = 3;\n    this.maxSpeedY = 3;\n\n    this.game = game;\n    this.loopIndex = 0;\n    this.frames = 0;\n    this.disableLaser = false;\n    this.destroyed = false;\n    this.initializeEnergy();\n  }\n\n  initializeEnergy() {\n    this.energy = [];\n    const energyX = 710;\n    for (let i = 0; i < this.maxEnergy; i++) {\n      let x = i * 40 + energyX;\n      this.energy.push(new Energy(x, 50));\n    }\n  }\n\n  syphonEnergy() {\n    this.image = this.poweredUp;\n  }\n\n  receiveDamage(atkType) {\n    let dmg;\n    switch (atkType) {\n      case \"small\":\n        if (this.shields >= this.game.enemy.lasers) {\n          dmg = this.game.enemy.lasers;\n          this.shields -= dmg;\n        } else if (this.shields - this.game.enemy.lasers < 0) {\n          dmg = -(this.shields - this.game.enemy.lasers);\n          this.armor -= dmg / 2;\n          this.shields = 0;\n          //   this.shields !== 0 &&\n          //   this.shields <= this.game.enemy.lasers\n          // ) {\n          //   dmg = this.shields;\n          //   this.shields = 0;\n        } else if (this.shields === 0) {\n          dmg = this.game.enemy.lasers / 2;\n          this.armor -= dmg;\n        }\n        break;\n      case \"laser\":\n        if (this.shields >= this.game.enemy.lasers) {\n          dmg = this.game.enemy.lasers;\n          this.shields -= dmg;\n        } else if (this.shields - this.game.enemy.lasers < 0) {\n          dmg = -(this.shields - this.game.enemy.lasers);\n          this.armor -= dmg / 2;\n          this.shields = 0;\n          //   this.shields !== 0 &&\n          //   this.shields <= this.game.enemy.lasers\n          // ) {\n          //   dmg = this.shields;\n          //   this.shields = 0;\n        } else if (this.shields === 0) {\n          dmg = this.game.enemy.lasers / 2;\n          this.armor -= dmg;\n        }\n        break;\n      case \"missle\":\n        if (this.shields > this.game.enemy.missles) {\n          dmg = this.game.enemy.missles / 2;\n          this.shields -= dmg;\n        } else if (\n          this.shields !== 0 &&\n          this.shields <= this.game.enemy.missles\n        ) {\n          dmg = this.shields;\n          this.shields = 0;\n        } else if (this.shields === 0) {\n          dmg = this.game.enemy.missles;\n          this.armor -= dmg;\n        }\n      default:\n        break;\n    }\n    if (this.armor <= 0) this.destroyed = true;\n  }\n\n  drawFrame(fX, fY, ctx) {\n    ctx.drawImage(\n      this.image,\n      fX * this.width,\n      fY * this.height,\n      this.width,\n      this.height,\n      this.game.player.position.x,\n      this.game.player.position.y,\n      130,\n      130\n    );\n  }\n\n  draw(ctx) {\n    if (this.frames > 5) {\n      this.loopIndex += 1;\n      this.frames = 0;\n      this.drawFrame(this.loopIndex, 0, ctx);\n    } else {\n      this.drawFrame(this.loopIndex, 0, ctx);\n      this.frames += 1;\n    }\n\n    if (this.loopIndex === 5) {\n      this.loopIndex = 0;\n    }\n\n    // this.drawFrame(3, 0, this.position.x, this.position.y, ctx);\n    // this.drawFrame(4, 0, this.position.x, this.position.y, ctx);\n  }\n\n  update(dt) {\n    if (this.destroyed === true) {\n      this.game.lossScreen();\n      this.game.hand.endGame();\n    }\n    // this.position.x += this.speedX;\n    this.position.x += this.speedX;\n    this.position.y += this.speedY;\n\n    if (this.position.x <= 100) this.position.x = 100;\n    if (this.position.x >= 600) this.position.x = 600;\n    if (this.position.y <= 0) this.position.y = 0;\n    if (this.position.y >= 500) this.position.y = 500;\n  }\n\n  // moveToStartPos() {\n  //   const angle = Math.atan2(this.position.y - 200, this.position.x - 200);\n  //   console.log(angle);\n  // }\n\n  moveUp() {\n    this.speedY = -this.maxSpeedY;\n  }\n\n  moveDown() {\n    this.speedY = this.maxSpeedY;\n  }\n\n  moveLeft() {\n    this.speedX = -this.maxSpeedX;\n  }\n\n  moveRight() {\n    this.speedX = this.maxSpeedX;\n  }\n\n  stopY() {\n    this.speedY = 0;\n  }\n\n  stopX() {\n    this.speedX = 0;\n  }\n\n  fire() {\n    if (!this.disableLaser) {\n      this.disableLaser = true;\n      this.game.projectiles.push(new Fire(this.game));\n      setTimeout(() => {\n        this.disableLaser = false;\n      }, 200);\n    }\n  }\n}\n\n// if (this.position.y < 210) {\n//   this.position.y += this.speed;\n// } else {\n//   this.speed = -this.speed;\n//   this.position.y += this.speed;\n// }\n// if (this.position.y > 190) {\n//   this.position.y += this.speed;\n// } else {\n//   this.speed = -this.speed;\n//   this.position.y += this.speed;\n// }\n","import Animation from \"../util/animation\";\nimport Energy from \"./energy\";\n\nexport default class PlayerStatus {\n  constructor(game) {\n    this.position = {\n      x: 210,\n      y: 30,\n    };\n    this.game = game;\n    // this.render();\n  }\n\n  // render() {\n  //   this.renderShields();\n  //   this.renderArmor();\n  //   this.renderEnergy();\n  //   this.renderLasers();\n  //   this.renderMissles();\n  // }\n\n  // renderShields() {\n  //   this.shields = this.game.player.shields;\n  //   this.armor = this.game.player.armor;\n  //   // const playerShields = document.createElement(\"span\");\n  //   // playerShields.innerText = `${this.shields}`;\n  //   // document.getElementById(\"player-shields\").appendChild(playerShields);\n  //   document.getElementById(\n  //     \"player-armor-num\"\n  //   ).innerText = `Dad Shields: ${this.shields} Dad Armor: ${this.armor}`;\n  // }\n  // renderArmor() {\n  //   // // const playerArmor = document.createElement(\"span\");\n  //   // // playerArmor.innerText = `${this.armor}`;\n  //   // // document.getElementById(\"player-armor\").appendChild(playerArmor);\n  //   // document.getElementById(\"player-armor-num\").innerText = `${this.armor}`;\n  // }\n  // renderEnergy() {\n  //   this.energy = this.game.player.energy;\n  //   // const playerEnergy = document.createElement(\"span\");\n  //   // playerEnergy.innerText = `${this.energy}`;\n  //   // document.getElementById(\"player-energy\").appendChild(playerEnergy);\n  //   document.getElementById(\"player-energy-num\").innerText = `${this.energy}`;\n  // }\n\n  // renderLasers() {\n  //   this.lasers = this.game.player.lasers;\n  //   document.getElementById(\"player-lasers-num\").innerText = `${this.lasers}`;\n  // }\n\n  // renderMissles() {\n  //   this.missles = this.game.player.missles;\n  //   document.getElementById(\"player-missles-num\").innerText = `${this.missles}`;\n  // }\n\n  renderEnergy(ctx) {\n    this.game.player.energy.forEach((ball) => {\n      ball.draw(ctx);\n    });\n  }\n\n  draw(ctx) {\n    // const energy = this.game.player.energy;\n    // const energyX = 500;\n    // for (let i = 0; i < energy; i++) {\n    //   debugger;\n    //   let x = i * 40 + energyX;\n    //   let dad = new Energy(x, 40);\n    //   dad.draw(ctx);\n    // }\n    this.renderEnergy(ctx);\n    ctx.fillStyle = \"#6f6\";\n    ctx.textAlign = \"left\";\n    ctx.fillText(`Dad Stats:`, this.position.x, this.position.y);\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\n      `Shields: ${this.game.player.shields}    Lasers: ${this.game.player.lasers}`,\n      // `Shields: ${this.game.player.shields}    Lasers: ${this.game.player.lasers}       Energy: ${this.game.player.energy}`,\n      this.position.x + 10,\n      this.position.y + 25\n    );\n    ctx.fillText(\n      `Armor: ${this.game.player.armor}      Missles: ${this.game.player.missles}`,\n      this.position.x + 10,\n      this.position.y + 50\n    );\n    ctx.fillText(`Draw Pile: ${this.game.hand.playerCards.length}`, 1085, 780);\n    ctx.fillText(\n      `Discard Pile: ${this.game.hand.discardPile.length}`,\n      1085,\n      820\n    );\n    ctx.fillStyle = \"#ffbb00\";\n    ctx.fillText(`Energy`, 765, 40);\n\n    // ctx.fillStyle = \"blue\";\n    // ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n    // ctx.fillStyle = \"white\";\n    // ctx.fillText(\n    //   `Shields: ${this.game.player.shields}`,\n    //   this.position.x + 10,\n    //   this.position.y + 30\n    // );\n    // ctx.fillText(\n    //   `Armor: ${this.game.player.armor}`,\n    //   this.position.x + 10,\n    //   this.position.y + 60\n    // );\n    // ctx.fillText(\n    //   `Energy: ${this.game.player.energy}`,\n    //   this.position.x + 10,\n    //   this.position.y + 90\n    // );\n  }\n\n  update() {}\n}\n","import Player from \"./player\";\n\nexport default class InputHandler {\n  constructor(player) {\n    document.addEventListener(\"keydown\", (e) => {\n      switch (e.key) {\n        case \"w\":\n          player.moveUp();\n          break;\n        case \"s\":\n          player.moveDown();\n          break;\n        case \"a\":\n          player.moveLeft();\n          break;\n        case \"d\":\n          player.moveRight();\n          break;\n        case \" \":\n          e.preventDefault();\n          // if (player.game.gameState === 0) player.fire();\n          // if (player.game.gameState === 1) player.fire();\n          // if (player.game.gameState === 8) player.fire();\n          player.fire();\n          break;\n        default:\n          break;\n      }\n    });\n\n    document.addEventListener(\"keyup\", (e) => {\n      switch (e.key) {\n        case \"w\":\n          if (player.speedY <= 0) player.stopY();\n          break;\n        case \"s\":\n          if (player.speedY >= 0) player.stopY();\n          break;\n        case \"a\":\n          if (player.speedX <= 0) player.stopX();\n          break;\n        case \"d\":\n          if (player.speedX >= 0) player.stopX();\n          break;\n        case \" \":\n          break;\n        default:\n          break;\n      }\n    });\n  }\n}\n","import Explosion from \"../util/explosion\";\nimport Card from \"./card\";\n\nexport default class StartGame extends Card {\n  constructor(game) {\n    super(game);\n    this.ssX = 1155;\n    this.ssY = 560;\n    this.ssWidth = 128;\n    this.ssHeight = 64;\n\n    this.game = game;\n    this.description = \"Start game\";\n\n    this.image = \"assets/dud.png\";\n    this.cardImg = document.getElementById(\"btn-start\");\n  }\n\n  collision(laser, card) {\n    let laserRight = laser.position.x + laser.width;\n    let laserY = laser.position.y;\n    let topLeft = card.ssY;\n    let bottomLeft = card.ssY + 60;\n    let cardX = this.ssX;\n\n    if (laserRight >= cardX && laserY >= topLeft && laserY <= bottomLeft) {\n      const cardIdx = this.game.elements.indexOf(this);\n      this.game.elements.splice(cardIdx, 1);\n      const laserIdx = this.game.projectiles.indexOf(laser);\n      this.game.projectiles.splice(laserIdx, 1);\n      this.game.elements.push(\n        new Explosion(laser.position.x, laser.position.y, this.game)\n      );\n      // this.game.endScreen();\n      this.game.initIntro(this.game.startingCards);\n    }\n  }\n}\n","import Explosion from \"../util/explosion\";\n\nexport default class Button {\n  constructor(image, x, y, type, game, width, height) {\n    this.image = image;\n    this.x = x;\n    this.y = y;\n    this.game = game;\n    this.type = type;\n    this.width = width;\n    this.height = height;\n  }\n\n  draw(ctx) {\n    ctx.drawImage(this.image, this.x, this.y, this.width, this.height);\n  }\n\n  hideAll() {\n    const btns = document.getElementsByClassName(\"start-screen-div\");\n    Array.from(btns).forEach((btn) => {\n      btn.classList.add(\"hidden\");\n    });\n  }\n\n  collision(laser) {\n    let laserRight = laser.position.x + laser.width;\n    let laserY = laser.position.y;\n    let topLeft = this.y;\n    let bottomLeft = this.y + this.height;\n\n    if (laserRight >= this.x && laserY >= topLeft && laserY <= bottomLeft) {\n      const laserIdx = this.game.projectiles.indexOf(laser);\n      this.game.projectiles.splice(laserIdx, 1);\n      this.game.elements.push(\n        new Explosion(laser.position.x, laser.position.y, this.game)\n      );\n      this.hideAll();\n      switch (this.type) {\n        case \"start\":\n          this.game.initSelectCards();\n          break;\n        case \"instructions\":\n          document.getElementById(\"ss-instructions\").classList.remove(\"hidden\");\n          break;\n        case \"story\":\n          document.getElementById(\"ss-story\").classList.remove(\"hidden\");\n          break;\n        case \"illustration\":\n          document.getElementById(\"rules-pic-box\").classList.remove(\"hidden\");\n          document\n            .getElementById(\"rules-pic-box\")\n            .addEventListener(\"click\", () => {\n              document.getElementById(\"rules-pic-box\").classList.add(\"hidden\");\n            });\n          break;\n        case \"credits\":\n          document.getElementById(\"ss-credits\").classList.remove(\"hidden\");\n          break;\n        case \"reset\":\n          break;\n        case \"linked in\":\n          window.open(\"https://www.linkedin.com/in/paul-stonebraker\", \"_blank\");\n          break;\n        case \"angel list\":\n          window.open(\"https://angel.co/u/paul-stonebraker\", \"_blank\");\n          break;\n        case \"github\":\n          window.open(\"https://github.com/wpstonebraker\", \"_blank\");\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  update(dt) {\n    if (this.game.projectiles.length >= 1) {\n      this.game.projectiles.forEach((projectile) => {\n        this.collision(projectile);\n      });\n    }\n  }\n}\n","import Explosion from \"../util/explosion\";\nimport EnemyProjectile from \"./enemyProjectile\";\nimport EnemyShields from \"./enemyShields\";\n\nexport default class SmallEnemy {\n  constructor(game, x, y) {\n    this.game = game;\n    this.image = document.getElementById(\"img_smallEnemy\");\n    this.targetImage = document.getElementById(\"img_smallEnemyHighlight\");\n    this.position = {\n      x: x,\n      y: y,\n    };\n    this.size = 100;\n    this.receiveAttackTop = this.position.y;\n    this.receiveAttackBottom = this.position.y + this.size;\n    this.receiveAttackX = 1200;\n    this.shields = 10;\n    this.armor = 5;\n    this.laserSprite = document.getElementById(\"img_npc1a1\");\n    this.lasers = 5;\n    this.name = \"Alien Scout\";\n    this.destroyed = false;\n    this.nextAction = \"Laser Attack\";\n  }\n\n  draw(ctx) {\n    if (!this.destroyed) {\n      let playerPosY = this.game.player.position.y + 100;\n      if (\n        playerPosY >= this.position.y &&\n        playerPosY <= this.position.y + this.size\n      ) {\n        this.renderStats(ctx);\n        this.renderTarget(ctx);\n        ctx.drawImage(\n          this.targetImage,\n          this.position.x,\n          this.position.y,\n          this.size,\n          this.size\n        );\n      } else {\n        ctx.drawImage(\n          this.image,\n          this.position.x,\n          this.position.y,\n          this.size,\n          this.size\n        );\n      }\n    }\n  }\n\n  renderStats(ctx) {\n    // ctx.beginPath();\n    // ctx.moveTo(this.position.x + 50, this.position.y + 70);\n    // ctx.lineTo(1400, 400);\n    // ctx.lineWidth = 5;\n    // ctx.strokeStyle = \"hsla(0, 100%, 50%, 0.25)\";\n    // ctx.stroke();\n    ctx.fillStyle = \"hsla(0, 100%, 50%, 0.25)\";\n    ctx.fillRect(1400, 400, 130, 70);\n    ctx.fillStyle = \"white\";\n    ctx.fillText(`Shields: ${this.shields}`, 1405, 420);\n    ctx.fillText(`Armor: ${this.armor}`, 1405, 440);\n    ctx.fillText(`Lasers: ${this.lasers}`, 1405, 460);\n\n    // ctx.fillStyle = \"white\";\n    // ctx.fillText(this.name, 970, 20);\n    // ctx.fillText(\n    //   `Shields: ${this.shields}     Lasers: ${this.lasers}`,\n    //   1120,\n    //   55\n    // );\n    // ctx.fillText(`Armor: ${this.armor}`, 1120, 80);\n  }\n\n  renderTarget(ctx) {\n    ctx.fillStyle = \"hsla(0, 100%, 50%, 1)\";\n    ctx.textAlign = \"center\";\n    ctx.fillText(this.name, 1250, 30);\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Next Turn:\", 1250, 55);\n\n    ctx.fillText(this.nextAction, 1250, 80);\n  }\n\n  update(dt) {\n    if (this.armor <= 0 && this.position.x > 1500) {\n      let idx = this.game.elements.indexOf(this);\n      this.game.elements.splice(idx, 1);\n      idx = this.game.enemies.indexOf(this);\n      this.game.enemies.splice(idx, 1);\n      if (this.game.enemies.length === 0) {\n        this.game.postBattle();\n      }\n    } else if (this.armor <= 0) {\n      this.position.x += 3;\n    } else if (this.position.x > 1200) {\n      this.position.x -= 3;\n    }\n  }\n\n  receiveDamage(atkType) {\n    let dmg;\n    let type;\n    switch (atkType) {\n      case \"laser\":\n        if (this.shields >= this.game.player.lasers) {\n          dmg = this.game.player.lasers;\n          type = \"shields\";\n          this.shields -= dmg;\n        } else if (this.shields === 0) {\n          dmg = this.game.player.lasers / 2;\n          this.armor -= dmg;\n          type = \"armor\";\n        } else if (this.shields - this.game.player.lasers < 0) {\n          dmg = -(this.shields - this.game.player.lasers) / 2;\n          this.armor -= dmg;\n          this.shields = 0;\n          type = \"armor\";\n        }\n        break;\n      case \"overcharge\":\n        if (this.shields >= this.game.player.lasers + 20) {\n          dmg = this.game.player.lasers + 20;\n          this.shields -= dmg;\n          type = \"shields\";\n        } else if (this.shields === 0) {\n          dmg = (this.game.player.lasers + 20) / 2;\n          this.armor -= dmg;\n          type = \"armor\";\n        } else if (this.shields - (this.game.player.lasers + 20) < 0) {\n          dmg = -(this.shields - (this.game.player.lasers + 20)) / 2;\n          this.armor -= dmg;\n          this.shields = 0;\n          type = \"armor\";\n        }\n        break;\n      case \"missle\":\n        if (this.shields > this.game.player.missles / 2) {\n          dmg = this.game.player.missles / 2;\n          this.shields -= dmg;\n          type = \"shields\";\n        } else if (this.shields === 0) {\n          dmg = this.game.player.missles;\n          this.armor -= dmg;\n          type = \"armor\";\n        } else if (\n          this.shields !== 0 &&\n          this.shields <= this.game.player.missles / 2\n        ) {\n          dmg = this.game.player.missles / 2 - this.shields;\n          this.armor -= dmg;\n          this.shields = 0;\n          type = \"armor\";\n        }\n\n      default:\n        break;\n    }\n\n    if (this.armor <= 0) this.destroyed = true;\n    // if (this.armor <= 0) {\n    //   debugger;\n    //   let idx = this.game.elements.indexOf(this);\n    //   this.game.elements.splice(idx, 1);\n    //   idx = this.game.enemies.indexOf(this);\n    //   this.game.enemies.splice(idx, 1);\n    // }\n\n    // self.game.elements.push(\n    //   new EnemyShields(self.position.x, self.position.y, self.game)\n    // );\n\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n    document.getElementById(\n      \"card-description-span\"\n    ).innerText = `Enemy's ${type} receives ${dmg} damage!`;\n    // document.getElementById(\n    //   \"enemy-display-span\"\n    // ).innerText = `Enemy's armor is at ${this.armor}`;\n\n    // this.game.enemyStatus.render();\n  }\n\n  action() {\n    document.getElementById(\"card-description\").classList.remove(\"hidden\");\n    document.getElementById(\n      \"card-description-span\"\n    ).innerText = `Enemy attacks for ${this.lasers} laser damage`;\n    const angle = Math.atan2(\n      this.position.y + 80 - (this.game.player.position.y + 100),\n      this.position.x - (this.game.player.position.x + 50)\n    );\n    const velocity = {\n      x: Math.cos(angle),\n      y: Math.sin(angle),\n    };\n    this.game.projectiles.push(\n      new EnemyProjectile(\n        this.position.x,\n        this.position.y + 80,\n        this.laserSprite,\n        32,\n        16,\n        -15,\n        this.game,\n        \"small\",\n        velocity\n      )\n    );\n  }\n\n  renderShields() {\n    this.game.elements.push(\n      new EnemyShields(this.position.x, this.position.y, this.size, this.game)\n    );\n  }\n\n  renderExplosion() {\n    this.game.elements.push(\n      new Explosion(this.position.x, this.position.y, this.game)\n    );\n  }\n\n  // moveToStartPos(x, y) {\n  //   const angle = Math.atan2(this.position.y - 200, this.position.x - 200);\n  //   console.log(angle);\n  // }\n}\n","import Card from \"./cards/card\";\nimport Enemy from \"./enemy/enemy\";\nimport Hand from \"./hand\";\nimport Player from \"./player/player\";\nimport PlayerStatus from \"./player/player_status\";\nimport EnemyStatus from \"./enemy/enemy_status\";\nimport Overcharge from \"./cards/overcharge\";\nimport Explosion from \"./util/explosion\";\nimport InputHandler from \"./player/Input\";\nimport InstallUpdate from \"./cards/installUpdate\";\nimport StartGame from \"./cards/startGame\";\nimport SyphonEnergy from \"./cards/syphonEnergy\";\nimport Salvo from \"./cards/salvo\";\nimport TuneUp from \"./cards/tuneUp\";\nimport Button from \"./buttons/button\";\nimport SmallEnemy from \"./enemy/smallEnemy\";\n\nexport default class Game {\n  constructor(gameWidth, gameHeight) {\n    this.gameWidth = gameWidth;\n    this.gameHeight = gameHeight;\n    this.background = document.getElementById(\"img_background\");\n    this.projectiles = [];\n    this.startingChoices = [];\n    this.gameState = 0;\n    this.startingCards = [];\n    this.enemies = [];\n    this.elements = [];\n    this.texts = [];\n    this.playerTurn = true;\n    this.hasStarted = false;\n    this.player = new Player(this);\n    this.target;\n    this.gameover = false;\n    this.isOver = this.isOver.bind(this);\n    this.playerStatus;\n    this.topDash = document.getElementById(\"img_topDash\");\n    this.bottomDash = document.getElementById(\"img_bottomDash\");\n    this.topScreen = document.getElementById(\"img_topTerminal\");\n    this.energyScreen = document.getElementById(\"img_energyTerminal\");\n  }\n\n  // this sections handles initialization of game upon load in\n  init() {\n    this.texts = [this.drawSelectScreenWords];\n    this.elements = [this.player];\n    new InputHandler(this.player);\n    this.initializeStartScreenButtons();\n  }\n\n  drawSelectScreenWords(ctx) {\n    ctx.font = \"150px VT323\";\n    ctx.fillStyle = \"yellow\";\n    ctx.fillText(\"SPACE DAD\", 150, 200);\n    ctx.font = \"25px VT323\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Move Up and Down with W and S\", 200, 500);\n    ctx.fillText(\"Move Left and Right with A and D\", 200, 520);\n    ctx.fillText(\"Use space to shoot a selection\", 200, 600);\n  }\n\n  initializeStartScreenButtons() {\n    const btnX = 725;\n    const story = document.getElementById(\"btn-story\");\n    const instructions = document.getElementById(\"btn-instructions\");\n    const illustration = document.getElementById(\"btn-illustration\");\n    const startGame = document.getElementById(\"btn-start\");\n    const credits = document.getElementById(\"btn-credits\");\n    const reset = document.getElementById(\"btn-reset\");\n    this.elements.push(\n      new Button(story, btnX, 150, \"story\", this, 128, 64),\n      new Button(instructions, btnX, 250, \"instructions\", this, 128, 64),\n      new Button(illustration, btnX, 350, \"illustration\", this, 128, 64),\n      new Button(startGame, btnX, 450, \"start\", this, 128, 64),\n      new Button(credits, btnX, 550, \"credits\", this, 128, 64)\n      // new Button(reset, btnX, 575, \"reset\", this, 128, 64)\n    );\n  }\n\n  // this handles the card select screen\n\n  initSelectCards() {\n    this.texts = [this.drawSelectInstructions];\n    this.initializeStartingCards();\n    this.elements = [this.player, ...this.startingChoices];\n    this.gameState = 1;\n    new InputHandler(this.player);\n  }\n\n  drawSelectInstructions(ctx) {\n    ctx.font = \"25px VT323\";\n    ctx.fillStyle = \"white\";\n    ctx.textAlign = \"left\";\n    ctx.fillText(\"Shoot to select your starting cards\", 200, 600);\n  }\n\n  initializeStartingCards() {\n    this.startingChoices = [\n      new InstallUpdate(this),\n      new Overcharge(this),\n      new SyphonEnergy(this),\n      new TuneUp(this),\n      new Salvo(this),\n      new StartGame(this),\n    ];\n  }\n\n  // drawStartingCards(ctx) {\n  //   this.startingChoices.forEach((card, i) => {\n  //     if (i !== this.startingChoices.length - 1) {\n  //       card.draw(ctx, 1200, card.y, 40, 60);\n  //       card.checkPos(ctx);\n  //     } else {\n  //       card.draw(ctx, 1155, card.y, 128, 64);\n  //       card.checkPos(ctx);\n  //     }\n  //   });\n  // }\n\n  // drawStartingCards(ctx) {\n  //   ctx.drawImage(this.background, 0, 0, 1600, 800);\n  //   this.startingChoices.forEach((card, i) => {\n  //     card.draw(ctx, 1200, card.y, 40, 60);\n  //   });\n  //   this.elements.forEach((element) => element.draw(ctx));\n  //   this.projectiles.forEach((element) => element.draw(ctx));\n  // }\n\n  initIntro(startingCards) {\n    // this.player = new Player(this);\n    this.texts = [];\n    this.elements = [this.player];\n\n    this.gameState = 2;\n\n    this.initBattle1(startingCards);\n\n    //commented out for testing\n    // setTimeout(() => {\n    //   this.texts = [this.writeIntroText1];\n    // }, 2000);\n    // setTimeout(() => {\n    //   this.texts = [this.writeIntroText2];\n    // }, 8000);\n    // setTimeout(() => {\n    //   this.texts = [];\n    //   this.initBattle1(startingCards);\n    // }, 15000);\n\n    // setTimeout(() => {\n    //   this.gameState = 3;\n    // }, 3000);\n    // setTimeout(() => {\n    //   this.gameState = 4;\n    // }, 10000);\n    // setTimeout(() => {\n    //   this.start(startingCards);\n    // }, 1000);\n  }\n\n  writeIntroText1(ctx) {\n    ctx.font = \"25px VT323\";\n    ctx.fillStyle = \"white\";\n    ctx.textAlign = \"center\";\n    ctx.fillText(\n      \"Space Dad heads back to Earth after a long day on Mars...\",\n      500,\n      500\n    );\n    ctx.fillText(\"Suddenly, Alien vessels appear blocking his path.\", 500, 550);\n  }\n\n  writeIntroText2(ctx) {\n    ctx.font = \"25px VT323\";\n    ctx.fillStyle = \"white\";\n    ctx.textAlign = \"right\";\n    ctx.fillText(\n      \"*ring ring* 'Honey, I'm going to be late. Yeah. Aliens again.'\",\n      500,\n      200\n    );\n  }\n\n  // boss fight\n  // start(startingCards) {\n  //   this.hasStarted = true;\n  //   this.player = new Player(this);\n\n  //   this.enemy = new Enemy(this);\n  //   this.playerStatus = new PlayerStatus(this);\n\n  //   this.hand = new Hand(this, startingCards);\n\n  //   this.enemyStatus = new EnemyStatus(this);\n\n  //   this.elements = [this.player, this.enemy, new SmallEnemy(this, 1500, 500)];\n  //   this.gameState = 5;\n  // }\n  initBattle1(startingCards) {\n    this.hasStarted = true;\n    // this.player = new Player(this);\n\n    this.playerStatus = new PlayerStatus(this);\n\n    this.hand = new Hand(this, startingCards);\n\n    this.enemy = new Enemy(this, 1500, 200);\n\n    this.enemies = [\n      new SmallEnemy(this, 1500, 100),\n      new SmallEnemy(this, 1500, 300),\n      new SmallEnemy(this, 1500, 500),\n    ];\n    // this.enemyStatus = new EnemyStatus(this);\n\n    this.elements = [this.playerStatus, this.player, ...this.enemies];\n    this.gameState = 5;\n    // this.introBossBattle();\n  }\n\n  postBattle() {\n    this.gameState = 6;\n    document.getElementById(\"post-battle-1-div\").classList.remove(\"hidden\");\n    document.getElementById(\"powerup-1\").addEventListener(\"click\", () => {\n      this.player.lasers += 5;\n      document.getElementById(\"post-battle-1-div\").classList.add(\"hidden\");\n      this.introBossBattle();\n    });\n    document.getElementById(\"powerup-2\").addEventListener(\"click\", () => {\n      this.player.maxEnergy += 1;\n      document.getElementById(\"post-battle-1-div\").classList.add(\"hidden\");\n      this.introBossBattle();\n    });\n    document.getElementById(\"powerup-3\").addEventListener(\"click\", () => {\n      this.player.missles += 5;\n      document.getElementById(\"post-battle-1-div\").classList.add(\"hidden\");\n      this.introBossBattle();\n    });\n  }\n\n  introBossBattle() {\n    this.playerTurn = false;\n    this.hand.disabled = true;\n    this.hand.discardHand();\n    this.gameState = 7;\n\n    this.enemies = [this.enemy];\n    this.elements = [this.playerStatus, this.player, ...this.enemies];\n    setTimeout(() => {\n      this.startBossBattle();\n    }, 5000);\n  }\n\n  startBossBattle() {\n    this.hand.startTurn();\n  }\n\n  computerTurn() {\n    if (!this.playerTurn) {\n      this.enemies.forEach((enemy, i) => {\n        setTimeout(() => {\n          enemy.action();\n        }, (i + 1) * 1000);\n      });\n      // this.enemy.action();\n    }\n\n    setTimeout(() => {\n      this.hand.startTurn();\n    }, this.enemies.length * 1000 + 1000);\n  }\n\n  isOver() {\n    if (!this.gameover) {\n      return false;\n    } else {\n      this.hand.endGame();\n      return true;\n    }\n    // if (this.hasStarted) {\n    //   // if (this.enemy.armor <= 0) {\n    //   //   document.getElementById(\"enemy-display-span\").innerText =\n    //   //     \"ENEMY DESTROYED! YOU WIN!\";\n    //   //   this.hand.disabled = true;\n    //   //   return true;\n    //   // } else if (this.player.armor <= 0) {\n    //   if (this.player.armor <= 0) {\n    //     document.getElementById(\"enemy-display-span\").innerText =\n    //       \"ABANDON SHIP! YOU HAVE LOST THE BATTLE!\";\n    //     this.hand.disabled = true;\n    //     return true;\n    //   }\n    //   return false;\n    // }\n  }\n\n  lossScreen() {\n    document.getElementById(\"card-description-span\").innerText = \"\";\n    document.getElementById(\"card-description\").classList.add(\"hidden\");\n    const linkedIn = document.getElementById(\"img_linkedIn\");\n    const angelList = document.getElementById(\"img_angelList\");\n    const github = document.getElementById(\"img_github\");\n\n    this.texts = [this.lossScreenText];\n    this.elements = [this.player];\n    this.elements.push(\n      new Button(linkedIn, 1000, 100, \"linked in\", this, 128, 128),\n      new Button(angelList, 1000, 300, \"angel list\", this, 128, 128),\n      new Button(github, 1000, 500, \"github\", this, 128, 128)\n    );\n  }\n\n  lossScreenText(ctx) {\n    ctx.fillStyle = \"yellow\";\n    ctx.fillText(\"OH NO!!! Space Dad never made it home...\", 200, 200);\n    ctx.fillText(\"Thanks for playing :)\", 200, 220);\n    ctx.fillText(\"Made with love by Paul Stonebraker\", 200, 240);\n    ctx.fillRect(1000, 300, 128, 128);\n    ctx.fillRect(1000, 500, 128, 128);\n  }\n\n  endScreen() {\n    document.getElementById(\"card-description-span\").innerText = \"\";\n    document.getElementById(\"card-description\").classList.add(\"hidden\");\n    const linkedIn = document.getElementById(\"img_linkedIn\");\n    const angelList = document.getElementById(\"img_angelList\");\n    const github = document.getElementById(\"img_github\");\n\n    this.texts = [this.endScreenText];\n    this.elements = [this.player];\n    this.elements.push(\n      new Button(linkedIn, 1000, 100, \"linked in\", this, 128, 128),\n      new Button(angelList, 1000, 300, \"angel list\", this, 128, 128),\n      new Button(github, 1000, 500, \"github\", this, 128, 128)\n    );\n  }\n\n  endScreenText(ctx) {\n    ctx.fillStyle = \"yellow\";\n    ctx.fillText(\"VICTORY!!!\", 200, 200);\n    ctx.fillText(\"Thanks for playing :)\", 200, 220);\n    ctx.fillText(\"Made with love by Paul Stonebraker\", 200, 240);\n    ctx.fillRect(1000, 300, 128, 128);\n    ctx.fillRect(1000, 500, 128, 128);\n  }\n\n  update(dt) {\n    this.elements.forEach((element) => element.update(dt));\n    this.projectiles.forEach((element) => element.update(dt));\n  }\n\n  draw(ctx) {\n    ctx.drawImage(this.background, 0, 0, 1600, 900);\n    ctx.drawImage(this.topDash, 0, 0, 1600, 200);\n    ctx.drawImage(this.bottomDash, 0, this.gameHeight - 333, 1600, 340);\n    this.texts.forEach((text) => text(ctx));\n    this.elements.forEach((element) => element.draw(ctx));\n    this.projectiles.forEach((element) => element.draw(ctx));\n\n    // ctx.drawImage(this.topScreen, 200, 0, 300, 100);\n    // ctx.drawImage(this.topScreen, 1100, 0, 300, 100);\n    // // card terminal\n    // ctx.drawImage(this.energyScreen, 300, 715, 1000, 165);\n    // ctx.drawImage(this.energyScreen, 675, 10, 250, 80);\n    // switch (this.gameState) {\n    //   case 0: // start screen\n    //     this.texts.forEach((text) => text(ctx));\n    //     this.elements.forEach((element) => element.draw(ctx));\n    //     this.projectiles.forEach((element) => element.draw(ctx));\n    //     break;\n    //   case 1: // select Power Cards screen\n    //     this.drawSelectInstructions(ctx);\n    //     this.drawStartingCards(ctx);\n    //     this.elements.forEach((element) => element.draw(ctx));\n    //     this.projectiles.forEach((element) => element.draw(ctx));\n    //     break;\n    //   case 2: // intro pause\n    //     this.elements.forEach((element) => element.draw(ctx));\n    //     break;\n    //   case 3: // intro words 1\n    //     this.elements.forEach((element) => element.draw(ctx));\n    //     this.writeIntroText1(ctx);\n    //     break;\n    //   case 4: // intro words 2\n    //     this.elements.forEach((element) => element.draw(ctx));\n    //     this.writeIntroText2(ctx);\n    //     break;\n    //   case 5: // battle 1\n    //     this.elements.forEach((element) => element.draw(ctx));\n    //     this.projectiles.forEach((element) => element.draw(ctx));\n    //     if (this.enemies.length === 0) this.postBattle();\n    //     break;\n    //   case 6:\n    //     this.elements.forEach((element) => element.draw(ctx));\n    //     this.projectiles.forEach((element) => element.draw(ctx));\n    //     break;\n    //   case 7: // boss battle\n    //     this.elements.forEach((element) => element.draw(ctx));\n    //     this.projectiles.forEach((element) => element.draw(ctx));\n    //     break;\n    //   case 8:\n    //     ctx.fillStyle = \"yellow\";\n    //     ctx.fillText(\"VICTORY!!!\", 200, 200);\n    //     ctx.fillRect(1000, 300, 128, 128);\n    //     ctx.fillRect(1000, 500, 128, 128);\n\n    //     this.elements.forEach((element) => element.draw(ctx));\n    //     this.projectiles.forEach((element) => element.draw(ctx));\n    //     break;\n\n    //   default:\n    //     break;\n    // }\n    // ctx.drawImage(this.topDash, 0, 0, 1600, 200);\n    // ctx.drawImage(this.bottomDash, 0, this.gameHeight - 340, 1600, 340);\n  }\n}\n","import Game from \"./game\";\nimport \"./styles/index.scss\";\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//   const p = document.createElement(\"p\");\n//   p.innerText = \"hellooooooo\";\n//   document.body.append(p);\n//   debugger;\n// });\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  document.getElementById(\"rules-pic-box\").addEventListener(\"click\", () => {\n    document.getElementById(\"rules-pic-box\").classList.add(\"hidden\");\n  });\n\n  // Array.from(document.getElementsByClassName(\"card-button\")).forEach(\n  //   (button, i) => {\n  //     button.addEventListener(\"click\", () => {\n  //       debugger;\n  //       let card = document.getElementById(`nc-${i}`);\n  //       if (card.childNodes.length === 1) {\n  //         debugger;\n  //         if (this.game.playerTurn && card.check() && this.disabled === false) {\n  //           this.disabled = true;\n  //           setTimeout(() => {\n  //             this.disabled = false;\n  //           }, 2500);\n  //           card.action();\n  //           this.discardPile.push(card);\n  //           document.getElementById(`card-${i}`).classList.add(\"playCard\");\n\n  //           setTimeout(() => {\n  //             document.getElementById(`card-${i}`).remove();\n  //           }, 1450);\n  //         }\n  //       }\n  //     });\n  //   }\n  // );\n\n  const GAME_WIDTH = 1600;\n  const GAME_HEIGHT = 900;\n  let game = new Game(GAME_WIDTH, GAME_HEIGHT);\n  game.init();\n\n  const startingCards = [];\n\n  let canvas = document.getElementById(\"game-screen\");\n  let ctx = canvas.getContext(\"2d\");\n  let lastTime = 0;\n  let frames = 0;\n\n  const endTurn = document.getElementById(\"end-turn-button\");\n\n  endTurn.addEventListener(\"click\", () => {\n    if (!game.hand.disabled && game.playerTurn) game.hand.endTurn();\n    // if (game.playerTurn) game.hand.endTurn();\n    // if (!game.hand.disabled) game.hand.endTurn();\n  });\n\n  function gameLoop(timestamp) {\n    let dt = timestamp - lastTime;\n    lastTime = timestamp;\n\n    game.update(dt);\n    game.draw(ctx);\n\n    if (!game.isOver()) {\n      requestAnimationFrame(gameLoop);\n    }\n    // game.isOver();\n  }\n\n  requestAnimationFrame(gameLoop);\n});\n"],"sourceRoot":""}